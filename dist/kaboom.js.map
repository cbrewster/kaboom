{
  "version": 3,
  "sources": ["../src/math.ts", "../src/utils.ts", "../src/gfx.ts", "../src/app.ts", "../src/audio.ts", "../src/assets.ts", "../src/logger.ts", "../src/plugins/kaboom.ts", "../src/kaboom.ts"],
  "sourcesContent": ["function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nfunction rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args): Vec2 {\n\n\tif (args.length === 0) {\n\t\treturn vec2(0, 0);\n\t}\n\n\tif (args.length === 1) {\n\t\tif (typeof args[0] === \"number\") {\n\t\t\treturn vec2(args[0], args[0]);\n\t\t} else if (isVec2(args[0])) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tx: args[0],\n\t\ty: args[1],\n\t\tclone(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(...args): Vec2 {\n\t\t\tconst s = vec2(...args);\n\t\t\treturn vec2(this.x * s.x, this.y * s.y);\n\t\t},\n\t\tdist(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen(): number {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit(): Vec2 {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal(): Vec2 {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(p2: Vec2): number {\n\t\t\treturn this.x * p2.x + this.y * p2.y;\n\t\t},\n\t\tangle(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t\t},\n\t\tlerp(p2: Vec2, t: number): Vec2 {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\ttoFixed(n: number): Vec2 {\n\t\t\treturn vec2(this.x.toFixed(n), this.y.toFixed(n));\n\t\t},\n\t\teq(other: Vec2): boolean {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t\t},\n\t};\n}\n\nfunction dir(deg: number): Vec2 {\n\tconst angle = deg2rad(deg);\n\treturn vec2(Math.cos(angle), Math.sin(angle));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t;\n}\n\nfunction isVec3(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t&& p.z !== undefined\n\t\t;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined\n\t\t&& c.r !== undefined\n\t\t&& c.g !== undefined\n\t\t&& c.b !== undefined\n\t\t;\n}\n\nfunction isMat4(m: any): Mat4 {\n\tif (\n\t\tm !== undefined\n\t\t&& Array.isArray(m.m)\n\t\t&& m.m.length === 16\n\t) {\n\t\treturn m;\n\t}\n}\n\nfunction rgb(...args): Color {\n\n\tif (args.length === 0) {\n\t\treturn rgb(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgb(args[0].r, args[0].g, args[0].b);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn rgb.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tr: clamp(~~args[0], 0, 255),\n\t\tg: clamp(~~args[1], 0, 255),\n\t\tb: clamp(~~args[2], 0, 255),\n\t\tclone(): Color {\n\t\t\treturn rgb(this.r, this.g, this.b);\n\t\t},\n\t\tlighten(a: number): Color {\n\t\t\treturn rgb(this.r + a, this.g + a, this.b + a);\n\t\t},\n\t\tdarken(a: number): Color {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\tinvert(): Color {\n\t\t\treturn rgb(255 - this.r, 255 - this.g, 255 - this.b);\n\t\t},\n\t\teq(other: Color): boolean {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.g\n\t\t\t\t;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t\t},\n\t};\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x ?? 0,\n\t\ty: y ?? 0,\n\t\tw: w ?? 1,\n\t\th: h ?? 1,\n\t\tscale(other: Quad): Quad {\n\t\t\treturn quad(\n\t\t\t\tthis.x + this.w * other.x,\n\t\t\t\tthis.y + this.h * other.y,\n\t\t\t\tthis.w * other.w,\n\t\t\t\tthis.h * other.h\n\t\t\t);\n\t\t},\n\t\tclone(): Quad {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other: Quad): boolean {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\nfunction wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n// TODO: let user pass seed\nconst defRNG = rng(Date.now());\n\nfunction rng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(...args) {\n\t\t\tif (args.length === 0) {\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else if (args.length === 1) {\n\t\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t\t} else if (isVec2(args[0])) {\n\t\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t\t} else if (isColor(args[0])) {\n\t\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t\t}\n\t\t\t} else if (args.length === 2) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t\t} else if (isVec2(args[0]) && isVec2(args[1])) {\n\t\t\t\t\treturn vec2(\n\t\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t\t);\n\t\t\t\t} else if (isColor(args[0]) && isColor(args[1])) {\n\t\t\t\t\treturn rgb(\n\t\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nfunction rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nfunction randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nfunction chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nfunction testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nfunction testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nfunction testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nfunction testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPt(r, l.p1) || testRectPt(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction testRectPt2(r: Rect, pt: Vec2): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nfunction testRectPt(r: Rect, pt: Vec2): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\nfunction minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestRectRect2,\n\ttestRectRect,\n\ttestLineLine,\n\ttestLineLineT,\n\ttestRectLine,\n\ttestRectPt,\n\tminkDiff,\n\tdir,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n};\n", "class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nfunction deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nexport {\n\tdeepEq,\n\tIDList,\n};\n", "import {\n\tvec2,\n\tvec3,\n\tquad,\n\trgb,\n\tmat4,\n\tdir,\n\tdeg2rad,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n} from \"./math\";\n\nimport {\n\tdeepEq,\n} from \"./utils\";\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tbackground: Color,\n\tdefProg: GfxProgram,\n\tcurProg: GfxProgram,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\tbgTex: GfxTexture,\n\tcurUniform: Uniform,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n\tdrawCalls: number,\n\tlastDrawCalls: number,\n\twidth: number,\n\theight: number,\n};\n\ntype GfxConf = {\n\tbackground?: Color,\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\ttexFilter?: TexFilter,\n    stretch?: boolean,\n    letterbox?: boolean,\n};\n\ntype DrawTextureConf = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\n// TODO: name\ntype DrawTextConf2 = RenderProps & {\n\ttext: string,\n\tfont?: GfxFont,\n\tsize?: number,\n\twidth?: number,\n\torigin?: Origin | Vec2,\n}\n\ntype Gfx = {\n\twidth(): number,\n\theight(): number,\n\tscale(): number,\n\tbackground(): Color,\n\tmakeTex(data: GfxTexData, conf?: GfxTexConf): GfxTexture,\n\tmakeProgram(vert: string, frag: string): GfxProgram,\n\tmakeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont,\n\tdrawTexture(conf: DrawTextureConf),\n\tdrawText(conf: DrawTextConf2),\n\tdrawFmtText(ftext: FormattedText),\n\tdrawRect(conf: DrawRectConf),\n\tdrawLine(conf: DrawLineConf),\n\tdrawLines(conf: DrawLinesConf),\n\tdrawTri(conf: DrawTriConf),\n\tdrawCircle(conf: DrawCircleConf),\n\tdrawEllipse(conf: DrawEllipseConf),\n\tdrawPoly(conf: DrawPolyConf),\n\tdrawUVQuad(conf: DrawUVQuadConf),\n\tfmtText(conf: DrawTextConf2): FormattedText,\n\tframeStart(),\n\tframeEnd(),\n\tpushTransform(): void,\n\tpopTransform(): void,\n\tpushTranslate(x: number, y: number): void,\n\tpushTranslate(p: Vec2): void,\n\tpushScale(sx: number, sy: number): void,\n\tpushScale(s: number): void,\n\tpushScale(s: Vec2): void,\n\tpushRotateX(angle: number): void,\n\tpushRotateY(angle: number): void,\n\tpushRotateZ(angle: number): void,\n\tapplyMatrix(m: Mat4),\n\tdrawCalls(): number,\n};\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction gfxInit(gl: WebGLRenderingContext, gconf: GfxConf): Gfx {\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defProg = makeProgram(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gconf.background ?? rgb(0, 0, 0);\n\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, 1);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\t// a checkerboard texture\n\t\tconst bgTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tlastDrawCalls: 0,\n\t\t\tdefProg: defProg,\n\t\t\tcurProg: defProg,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t\tbackground: c,\n\t\t\tbgTex: bgTex,\n\t\t\twidth: gconf.width,\n\t\t\theight: gconf.height,\n\t\t};\n\n\t})();\n\n\tfunction powerOfTwo(n) {\n\t\treturn (Math.log(n) / Math.log(2)) % 1 === 0;\n\t}\n\n\tfunction makeTex(data: GfxTexData, conf: GfxTexConf = {}): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\t\tconst filter = (() => {\n\t\t\tswitch (conf.filter ?? gconf.texFilter) {\n\t\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\t\tdefault: return gl.NEAREST;\n\t\t\t}\n\t\t})();\n\n\t\tconst wrap = (() => {\n\t\t\tswitch (conf.wrap) {\n\t\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t\t}\n\t\t})();\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeProgram(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxProgram {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\t\tif (msg !== \"\\n\") {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tthis.bind();\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name];\n\t\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t\t} else if (isMat4(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t\t} else if (isColor(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t\t} else if (isVec3(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t\t} else if (isVec2(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.unbind();\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tprog: GfxProgram = gfx.defProg,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tprog = prog ?? gfx.defProg;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| prog !== gfx.curProg\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curProg = prog;\n\t\tgfx.curUniform = uniform;\n\n\t\tconst nIndices = indices\n\t\t\t.map((i) => {\n\t\t\t\treturn i + gfx.vqueue.length / STRIDE;\n\t\t\t});\n\n\t\t// TODO: put more calculations in shader\n\t\tconst nVerts = verts\n\t\t\t.map((v) => {\n\t\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\t\treturn [\n\t\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity\n\t\t\t\t];\n\t\t\t})\n\t\t\t.flat();\n\n\t\tnIndices.forEach((i) => gfx.iqueue.push(i));\n\t\tnVerts.forEach((v) => gfx.vqueue.push(v));\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curProg\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.curProg.send(gfx.curUniform);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curProg.bind();\n\t\tgfx.curProg.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curProg.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tif (!gconf.background) {\n\t\t\tdrawUVQuad({\n\t\t\t\twidth: width(),\n\t\t\t\theight: height(),\n\t\t\t\tquad: quad(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth() * scale() / BG_GRID_SIZE,\n\t\t\t\t\theight() * scale() / BG_GRID_SIZE,\n\t\t\t\t),\n\t\t\t\ttex: gfx.bgTex,\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t\tgfx.lastDrawCalls = gfx.drawCalls;\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.lastDrawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\tfunction applyMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 0 && p.y === 0) return;\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 1 && p.y === 1) return;\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(conf: DrawUVQuadConf) {\n\n\t\tif (conf.width === undefined || conf.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (conf.width <= 0 || conf.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = conf.width;\n\t\tconst h = conf.height;\n\t\tconst origin = originPt(conf.origin || DEF_ORIGIN);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\t\tconst q = conf.quad || quad(0, 0, 1, 1);\n\t\tconst color = conf.color || rgb(255, 255, 255);\n\t\tconst opacity = conf.opacity ?? 1;\n\n\t\tpushTransform();\n\t\tpushTranslate(conf.pos);\n\t\tpushRotateZ(conf.angle);\n\t\tpushScale(conf.scale);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(conf.flipX ? q.x + q.w : q.x, conf.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(conf.flipX ? q.x + q.w : q.x, conf.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(conf.flipX ? q.x : q.x + q.w, conf.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(conf.flipX ? q.x : q.x + q.w, conf.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], conf.tex, conf.prog, conf.uniform);\n\n\t\tpopTransform();\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(\n\t\tconf: DrawTextureConf,\n\t) {\n\n\t\tif (!conf.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t\t}\n\n\t\tconst q = conf.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = conf.tex.width * q.w;\n\t\tconst h = conf.tex.height * q.h;\n\t\tconst scale = vec2(1);\n\n\t\tif (conf.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((conf.width || w) / w);\n\t\t\tconst repY = Math.ceil((conf.height || h) / h);\n\t\t\tconst origin = originPt(conf.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad({\n\t\t\t\t\t\t...conf,\n\t\t\t\t\t\tpos: (conf.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tscale: scale.scale(conf.scale || vec2(1)),\n\t\t\t\t\t\ttex: conf.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (conf.width && conf.height) {\n\t\t\t\tscale.x = conf.width / w;\n\t\t\t\tscale.y = conf.height / h;\n\t\t\t} else if (conf.width) {\n\t\t\t\tscale.x = conf.width / w;\n\t\t\t\tscale.y = scale.x;\n\t\t\t} else if (conf.height) {\n\t\t\t\tscale.y = conf.height / h;\n\t\t\t\tscale.x = scale.y;\n\t\t\t}\n\n\t\t\tdrawUVQuad({\n\t\t\t\t...conf,\n\t\t\t\t// @ts-ignore\n\t\t\t\tscale: scale.scale(conf.scale || vec2(1)),\n\t\t\t\ttex: conf.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360);\n\t\tend = deg2rad(end % 360);\n\t\tif (end <= start) end += Math.PI * 2;\n\n\t\t// TODO: better way to get this?\n\t\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\t\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\t\tconst step = (end - start) / nverts;\n\t\tconst pts = [];\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t\t}\n\n\t\t// doing this on the side due to possible floating point inaccuracy\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\t\treturn pts;\n\n\t}\n\n\tfunction drawRect(conf: DrawRectConf) {\n\n\t\tif (conf.width === undefined || conf.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (conf.width <= 0 || conf.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = conf.width;\n\t\tconst h = conf.height;\n\t\tconst origin = originPt(conf.origin || DEF_ORIGIN).add(1, 1);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\t\tlet pts = [\n\t\t\tvec2(0, 0),\n\t\t\tvec2(w, 0),\n\t\t\tvec2(w, h),\n\t\t\tvec2(0, h),\n\t\t];\n\n\t\t// TODO: drawPoly should handle generic rounded corners\n\t\tif (conf.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, conf.radius);\n\n\t\t\tpts = [\n\t\t\t\tvec2(r, 0),\n\t\t\t\tvec2(w - r, 0),\n\t\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tvec2(w, r),\n\t\t\t\tvec2(w, h - r),\n\t\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tvec2(w - r, h),\n\t\t\t\tvec2(r, h),\n\t\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tvec2(0, h - r),\n\t\t\t\tvec2(0, r),\n\t\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t\t];\n\n\t\t}\n\n\t\tdrawPoly({ ...conf, offset, pts });\n\n\t}\n\n\tfunction drawLine(conf: DrawLineConf) {\n\n\t\tconst { p1, p2 } = conf;\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t\t}\n\n\t\tconst w = conf.width || 1;\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: vec3(p.x, p.y, 0),\n\t\t\tuv: vec2(0),\n\t\t\tcolor: conf.color ?? rgb(),\n\t\t\topacity: conf.opacity ?? 1,\n\t\t}));\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], gfx.defTex, conf.prog, conf.uniform);\n\n\t}\n\n\tfunction drawLines(conf: DrawLinesConf) {\n\n\t\tconst pts = conf.pts;\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (conf.radius && pts.length >= 3) {\n\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t\t}\n\n\t\t\tconst radius = Math.min(conf.radius, minLen / 2);\n\n\t\t\tdrawLine({ ...conf, p1: pts[0], p2: pts[1], });\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i];\n\t\t\t\tconst p2 = pts[i + 1];\n\t\t\t\tdrawLine({\n\t\t\t\t\t...conf,\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdrawLine({ ...conf, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine({\n\t\t\t\t\t...conf,\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTri(conf: DrawTriConf) {\n\t\tif (!conf.p1 || !conf.p2 || !conf.p3) {\n\t\t\tthrow new Error(\"drawPoly() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t\t}\n\t\treturn drawPoly({\n\t\t\t...conf,\n\t\t\tpts: [conf.p1, conf.p2, conf.p3],\n\t\t});\n\t}\n\n\t// TODO: origin\n\tfunction drawCircle(conf: DrawCircleConf) {\n\n\t\tif (!conf.radius) {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t\t}\n\n\t\tif (conf.radius === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawEllipse({\n\t\t\t...conf,\n\t\t\tradiusX: conf.radius,\n\t\t\tradiusY: conf.radius,\n\t\t\tangle: 0,\n\t\t});\n\n\t}\n\n\t// TODO: use fan-like triangulation\n\tfunction drawEllipse(conf: DrawEllipseConf) {\n\n\t\tif (conf.radiusX === undefined || conf.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t\t}\n\n\t\tif (conf.radiusX === 0 || conf.radiusY === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawPoly({\n\t\t\t...conf,\n\t\t\tpts: getArcPts(\n\t\t\t\tvec2(0),\n\t\t\t\tconf.radiusX,\n\t\t\t\tconf.radiusY,\n\t\t\t\tconf.start ?? 0,\n\t\t\t\tconf.end ?? 360,\n\t\t\t\tconf.resolution\n\t\t\t),\n\t\t\tradius: 0,\n\t\t});\n\n\t}\n\n\tfunction drawPoly(conf: DrawPolyConf) {\n\n\t\tif (!conf.pts) {\n\t\t\tthrow new Error(\"drawPoly() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tconst npts = conf.pts.length;\n\n\t\tif (npts < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tpushTransform();\n\t\tpushTranslate(conf.pos);\n\t\tpushScale(conf.scale);\n\t\tpushRotateZ(conf.angle);\n\t\tpushTranslate(conf.offset);\n\n\t\tif (conf.fill !== false) {\n\n\t\t\tconst color = conf.color ?? rgb();\n\n\t\t\tconst verts = conf.pts.map((pt) => ({\n\t\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\t\tuv: vec2(0, 0),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: conf.opacity ?? 1,\n\t\t\t}));\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat();\n\n\t\t\tdrawRaw(verts, conf.indices ?? indices, gfx.defTex, conf.prog, conf.uniform);\n\n\t\t}\n\n\t\tif (conf.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...conf.pts, conf.pts[0] ],\n\t\t\t\tradius: conf.radius,\n\t\t\t\twidth: conf.outline.width,\n\t\t\t\tcolor: conf.outline.color,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(conf: DrawTextConf2): FormattedText {\n\n\t\tif (conf.text === undefined) {\n\t\t\tthrow new Error(\"fmtText() requires property \\\"text\\\".\");\n\t\t}\n\n\t\tconst font = conf.font;\n\t\tconst chars = (conf.text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = conf.size || gh;\n\t\tconst scale = vec2(size / gh).scale(vec2(conf.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [];\n\t\tlet curLine = [];\n\t\tlet lastSpace = null;\n\t\tlet cursor = 0;\n\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet char = chars[cursor];\n\n\t\t\t// check new line\n\t\t\tif (char === \"\\n\") {\n\t\t\t\t// always new line on '\\n'\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t} else if ((conf.width ? (curX + cw > conf.width) : false)) {\n\t\t\t\t// new line on last word if width exceeds\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\t\tchar = chars[cursor];\n\t\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t\t}\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t}\n\n\t\t\t// push char\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tcurLine.push(char);\n\t\t\t\tcurX += cw;\n\t\t\t\tif (char === \" \") {\n\t\t\t\t\tlastSpace = curLine.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttw = Math.max(tw, curX);\n\t\t\tcursor++;\n\n\t\t}\n\n\t\tflines.push(curLine);\n\n\t\tif (conf.width) {\n\t\t\ttw = conf.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(conf.pos || 0);\n\t\tconst offset = originPt(conf.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tfchars.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\topacity: conf.opacity,\n\t\t\t\t\t\tcolor: conf.color,\n\t\t\t\t\t\torigin: conf.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(conf: DrawTextConf2) {\n\t\tdrawFmtText(fmtText(conf));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t});\n\t\t}\n\t}\n\n//  \twindow.addEventListener(\"resize\", updateSize);\n\n\tfunction updateSize() {\n\t\tif (gconf.width && gconf.height && gconf.stretch) {\n\t\t\tif (gconf.letterbox) {\n\t\t\t\t// TODO: not working\n\t\t\t\tconst r1 = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\t\t\tconst r2 = gconf.width / gconf.height;\n\t\t\t\tif (r1 > r2) {\n\t\t\t\t\tgfx.width = gconf.height * r1;\n\t\t\t\t\tgfx.height = gconf.height;\n\t\t\t\t\tconst sw = gl.drawingBufferHeight * r2;\n\t\t\t\t\tconst sh = gl.drawingBufferHeight;\n\t\t\t\t\tconst x = (gl.drawingBufferWidth - sw) / 2;\n\t\t\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\t\t\tgl.viewport(x, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t} else {\n\t\t\t\t\tgfx.width = gconf.width;\n\t\t\t\t\tgfx.height = gconf.width / r1;\n\t\t\t\t\tconst sw = gl.drawingBufferWidth;\n\t\t\t\t\tconst sh = gl.drawingBufferWidth / r2;\n\t\t\t\t\tconst y = (gl.drawingBufferHeight - sh) / 2;\n\t\t\t\t\tgl.scissor(0, gl.drawingBufferHeight - sh - y, sw, sh);\n\t\t\t\t\tgl.viewport(0, -y, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgfx.width = gconf.width;\n\t\t\t\tgfx.height = gconf.height;\n\t\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tgfx.width = gl.drawingBufferWidth / scale();\n\t\t\tgfx.height = gl.drawingBufferHeight / scale();\n\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t}\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width;\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height;\n\t}\n\n\tfunction scale(): number {\n\t\treturn gconf.scale ?? 1;\n\t}\n\n\tfunction background(): Color {\n\t\treturn gfx.background.clone();\n\t}\n\n\tupdateSize();\n\tframeStart();\n\tframeEnd();\n\n\t// TODO: type this\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeProgram,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTri,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawPoly,\n\t\tdrawUVQuad,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotateX,\n\t\tpushRotateY,\n\t\tpushRotateZ,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tapplyMatrix,\n\t\tdrawCalls,\n\t\tbackground,\n\t};\n\n}\n\nexport {\n\tGfx,\n\toriginPt,\n\tgfxInit,\n};\n", "import {\n\tvec2,\n} from \"./math\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppConf = {\n\twidth?: number,\n\theight?: number,\n\tstretch?: boolean,\n\tscale?: number,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n\ttouchToMouse?: boolean,\n\taudioCtx?: AudioContext,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseDeltaPos: Vec2,\n\tmouseState: ButtonState,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\tmouseMoved: boolean,\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n\tfps: number,\n\tfpsBuf: number[],\n\tfpsTimer: number,\n\tkeyPressed: boolean,\n\tkeyPressedRep: boolean,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos(): Vec2,\n\tmouseDeltaPos(): Vec2,\n\tkeyDown(k?: Key): boolean,\n\tkeyPressed(k?: Key): boolean,\n\tkeyPressedRep(k?: Key): boolean,\n\tkeyReleased(k?: Key): boolean,\n\tmouseDown(): boolean,\n\tmouseClicked(): boolean,\n\tmouseReleased(): boolean,\n\tmouseMoved(): boolean,\n\tcharInputted(): string[],\n\tcursor(c?: Cursor): Cursor,\n\tfullscreen(f?: boolean): boolean,\n\tdt(): number,\n\tfps(): number,\n\ttime(): number,\n\tscreenshot(): string,\n\trun(f: () => void),\n\tquit(),\n\tfocused(): boolean,\n\tfocus(),\n\tcanvas: HTMLCanvasElement,\n\tisTouch: boolean,\n\tscale: number,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction appInit(gconf: AppConf = {}): App {\n\n    const root = gconf.root ?? document.body;\n\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\tconst app: AppCtx = {\n\t\tcanvas: gconf.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\troot.appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tmouseMoved: false,\n\t\tkeyPressed: false,\n\t\tkeyPressedRep: false,\n\t\tmouseState: \"up\",\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gconf.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t\tfps: 0,\n\t\tfpsBuf: [],\n\t\tfpsTimer: 0,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t\t\"s\",\n\t];\n\n\tif (gconf.width && gconf.height && !gconf.stretch) {\n\t\tapp.canvas.width = gconf.width * app.scale;\n\t\tapp.canvas.height = gconf.height * app.scale;\n\t} else {\n\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gconf.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// @ts-ignore\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0;\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\t\tapp.mouseMoved = true;\n\t});\n\n\tapp.canvas.addEventListener(\"mousedown\", () => {\n\t\tapp.mouseState = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", () => {\n\t\tapp.mouseState = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(e.key);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.keyPressedRep = true;\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.keyPressed = true;\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tif (!gconf.touchToMouse) return;\n\t\t// disable long tap context menu\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseState = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tif (!gconf.touchToMouse) return;\n\t\t// disable scrolling\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseMoved = true;\n\t});\n\n\tapp.canvas.addEventListener(\"touchend\", (e) => {\n\t\tif (!gconf.touchToMouse) return;\n\t\tapp.mouseState = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchcancel\", (e) => {\n\t\tif (!gconf.touchToMouse) return;\n\t\tapp.mouseState = \"released\";\n\t});\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n\t\t\t\t// TODO: don't resume if debug.paused\n\t\t\t\tgconf.audioCtx?.resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n\t\t\t\tgconf.audioCtx?.suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// TODO: not quite working\n//  \twindow.addEventListener(\"resize\", () => {\n//  \t\tif (!(gconf.width && gconf.height && !gconf.stretch)) {\n//  \t\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n//  \t\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n//  \t\t}\n//  \t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn app.mouseDeltaPos.clone();\n\t}\n\n\tfunction mouseClicked(): boolean {\n\t\treturn app.mouseState === \"pressed\";\n\t}\n\n\tfunction mouseDown(): boolean {\n\t\treturn app.mouseState === \"pressed\" || app.mouseState === \"down\";\n\t}\n\n\tfunction mouseReleased(): boolean {\n\t\treturn app.mouseState === \"released\";\n\t}\n\n\tfunction mouseMoved(): boolean {\n\t\treturn app.mouseMoved;\n\t}\n\n\tfunction keyPressed(k?: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.keyPressed;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\";\n\t\t}\n\t}\n\n\tfunction keyPressedRep(k: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.keyPressedRep;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t\t}\n\t}\n\n\tfunction keyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction keyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\tfunction fps(): number {\n\t\treturn app.fps;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\t// TODO: custom cursor\n\tfunction cursor(c?: Cursor): Cursor {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c;\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction fullscreen(f?: boolean): boolean {\n\t\tconst enterFullscreen = (el: any) => {\n\t\t\tif(el.mozRequestFullScreen) {\n\t\t\t\tel.mozRequestFullScreen();\n\t\t\t} else if (el.webkitRequestFullScreen) {\n\t\t\t\tel.webkitRequestFullScreen();\n\t\t\t} else {\n\t\t\t\tel.requestFullscreen();\n\t\t\t}\n\t\t};\n\n\t\tconst exitFullscreen = (doc: any) => {\n\t\t\tif(doc.mozExitFullScreen) {\n\t\t\t\tdoc.mozExitFullScreen();\n\t\t\t} else if(doc.webkitExitFullScreen) {\n\t\t\t\tdoc.webkitExitFullScreen();\n\t\t\t} else {\n\t\t\t\tdoc.exitFullscreen();\n\t\t\t}\n\t\t};\n\n\t\tconst getFullscreenElement = (doc: any):HTMLElement => {\n\t\t\tif(doc.mozFullscreenElement !== undefined) return doc.mozFullscreenElement;\n\t\t\tif(doc.webkitFullscreenElement !== undefined) return doc.webkitFullscreenElement;\n\t\t\treturn doc.fullscreenElement;\n\t\t};\n\n\t\tif (getFullscreenElement(document)) {\n\t\t\texitFullscreen(document);\n\t\t} else {\n\t\t\tenterFullscreen(app.canvas);\n\t\t}\n\n\t\treturn !!getFullscreenElement(document);\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t\tapp.fpsBuf.push(1 / app.dt);\n\t\t\t\tapp.fpsTimer += app.dt;\n\t\t\t\tif (app.fpsTimer >= 1) {\n\t\t\t\t\tapp.fpsTimer = 0;\n\t\t\t\t\tapp.fps = Math.round(app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length);\n\t\t\t\t\tapp.fpsBuf = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tconst gamepads = navigator.getGamepads();\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tapp.mouseState = processBtnState(app.mouseState);\n\t\t\tapp.charInputted = [];\n\t\t\tapp.mouseMoved = false;\n\t\t\tapp.keyPressed = false;\n\t\t\tapp.keyPressedRep = false;\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t\t};\n\n\t\tapp.stopped = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tkeyDown,\n\t\tkeyPressed,\n\t\tkeyPressedRep,\n\t\tkeyReleased,\n\t\tmouseDown,\n\t\tmouseClicked,\n\t\tmouseReleased,\n\t\tmouseMoved,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tfps,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t\tfocused: () => document.activeElement === app.canvas,\n\t\tfocus: () => app.canvas.focus(),\n\t\tcanvas: app.canvas,\n\t\tisTouch: app.isTouch,\n\t\tscale: app.scale,\n\t\tfullscreen,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n", "// TODO: onend event\n\nimport { clamp } from \"./math\";\n\ntype AudioCtx = {\n  ctx: AudioContext;\n  gainNode: GainNode;\n  masterNode: AudioNode;\n  analyser: AnalyserNode;\n};\n\ntype Audio = {\n  ctx: AudioContext;\n  volume(v: number): number;\n  play(snd: SoundData, conf?: AudioPlayConf): AudioPlay;\n  burp(conf?: AudioPlayConf): AudioPlay;\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\n// @ts-ignore\nimport burpBytes from \"./burp.mp3\";\n\nfunction audioInit(): Audio {\n  const audio: AudioCtx = (() => {\n    // @ts-ignore\n    const ctx = new (window.AudioContext || window.webkitAudioContext)();\n    const gainNode = ctx.createGain();\n    const analyser = ctx.createAnalyser();\n    const masterNode = gainNode;\n\n    masterNode.connect(ctx.destination);\n    analyser.connect(ctx.destination);\n\n    return {\n      ctx,\n      gainNode,\n      masterNode,\n      analyser,\n    };\n  })();\n\n  const burpSnd = {\n    buf: new AudioBuffer({\n      length: 1,\n      numberOfChannels: 1,\n      sampleRate: 44100,\n    }),\n  };\n\n  audio.ctx.decodeAudioData(\n    burpBytes.buffer.slice(0),\n    (buf) => {\n      burpSnd.buf = buf;\n    },\n    () => {\n      throw new Error(\"failed to make burp\");\n    }\n  );\n\n  // get / set master volume\n  function volume(v?: number): number {\n    if (v !== undefined) {\n      audio.gainNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n    }\n    return audio.gainNode.gain.value;\n  }\n\n  // plays a sound, returns a control handle\n  function play(\n    snd: SoundData,\n    conf: AudioPlayConf = {\n      loop: false,\n      volume: 1,\n      speed: 1,\n      detune: 0,\n      seek: 0,\n    }\n  ): AudioPlay {\n    let stopped = false;\n    let srcNode = audio.ctx.createBufferSource();\n\n    srcNode.buffer = snd.buf;\n    srcNode.loop = conf.loop ? true : false;\n\n    const gainNode = audio.ctx.createGain();\n\n    srcNode.connect(gainNode);\n    srcNode.connect(audio.analyser);\n    gainNode.connect(audio.masterNode);\n\n    const pos = conf.seek ?? 0;\n\n    srcNode.start(0, pos);\n\n    let startTime = audio.ctx.currentTime - pos;\n    let stopTime: number | null = null;\n\n    const handle = {\n      stop() {\n        if (stopped) {\n          return;\n        }\n        this.pause();\n        startTime = audio.ctx.currentTime;\n      },\n\n      play(seek?: number) {\n        if (!stopped) {\n          return;\n        }\n\n        const oldNode = srcNode;\n\n        srcNode = audio.ctx.createBufferSource();\n        srcNode.buffer = oldNode.buffer;\n        srcNode.loop = oldNode.loop;\n        srcNode.playbackRate.value = oldNode.playbackRate.value;\n\n        if (srcNode.detune) {\n          srcNode.detune.value = oldNode.detune.value;\n        }\n\n        srcNode.connect(gainNode);\n\n        const pos = seek ?? this.time();\n\n        srcNode.start(0, pos);\n        startTime = audio.ctx.currentTime - pos;\n        stopped = false;\n        stopTime = null;\n      },\n\n      pause() {\n        if (stopped) {\n          return;\n        }\n        srcNode.stop();\n        stopped = true;\n        stopTime = audio.ctx.currentTime;\n      },\n\n      paused(): boolean {\n        return stopped;\n      },\n\n      stopped(): boolean {\n        return stopped;\n      },\n\n      // TODO: affect time()\n      speed(val?: number): number {\n        if (val !== undefined) {\n          srcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n        }\n        return srcNode.playbackRate.value;\n      },\n\n      detune(val?: number): number {\n        if (!srcNode.detune) {\n          return 0;\n        }\n        if (val !== undefined) {\n          srcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n        }\n        return srcNode.detune.value;\n      },\n\n      volume(val?: number): number {\n        if (val !== undefined) {\n          gainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n        }\n        return gainNode.gain.value;\n      },\n\n      loop() {\n        srcNode.loop = true;\n      },\n\n      unloop() {\n        srcNode.loop = false;\n      },\n\n      duration(): number {\n        return snd.buf.duration;\n      },\n\n      time(): number {\n        if (stopped) {\n          return stopTime - startTime;\n        } else {\n          return audio.ctx.currentTime - startTime;\n        }\n      },\n    };\n\n    handle.speed(conf.speed);\n    handle.detune(conf.detune);\n    handle.volume(conf.volume);\n\n    return handle;\n  }\n\n  function burp(conf?: AudioPlayConf): AudioPlay {\n    return play(burpSnd, conf);\n  }\n\n  return {\n    ctx: audio.ctx,\n    volume,\n    play,\n    burp,\n  };\n}\n\nexport { Audio, audioInit };\n", "import { quad } from \"./math\";\n\nimport { Audio } from \"./audio\";\n\nimport { Gfx } from \"./gfx\";\n\n// @ts-ignore\nimport apl386Src from \"./apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./bean.png\";\n\ntype AssetsConf = {\n  errHandler?: (err: string) => void;\n};\n\ntype LoaderID = number;\n\ntype AssetsCtx = {\n  lastLoaderID: LoaderID;\n  loadRoot: string;\n  // TODO: just use a counter?\n  loaders: Record<number, boolean>;\n  // TODO: allow Promise<SoundData>?\n  sprites: Record<string, SpriteData>;\n  sounds: Record<string, SoundData>;\n  fonts: Record<string, FontData>;\n  shaders: Record<string, ShaderData>;\n};\n\ntype Assets = {\n  loadRoot(path?: string): string;\n  loadSprite(\n    name: string | null,\n    src: SpriteLoadSrc,\n    conf?: SpriteLoadConf\n  ): Promise<SpriteData>;\n  loadSpriteAtlas(\n    src: SpriteLoadSrc,\n    data: SpriteAtlasData\n  ): Promise<Record<string, SpriteData>>;\n  loadSpriteAtlas(\n    src: SpriteLoadSrc,\n    url: string\n  ): Promise<Record<string, SpriteData>>;\n  loadAseprite(\n    name: string | null,\n    imgSrc: SpriteLoadSrc,\n    jsonSrc: string\n  ): Promise<SpriteData>;\n  loadPedit(name: string | null, src: string): Promise<SpriteData>;\n  loadBean(name?: string): Promise<SpriteData>;\n  loadSound(name: string | null, src: string): Promise<SoundData>;\n  loadFont(\n    name: string | null,\n    src: string,\n    gw: number,\n    gh: number,\n    conf?: FontLoadConf\n  ): Promise<FontData>;\n  loadShader(\n    name: string | null,\n    vert?: string,\n    frag?: string,\n    isUrl?: boolean\n  ): Promise<ShaderData>;\n  loadProgress(): number;\n  load<T>(prom: Promise<T>);\n  sprites: Record<string, SpriteData>;\n  fonts: Record<string, FontData>;\n  sounds: Record<string, SoundData>;\n  shaders: Record<string, ShaderData>;\n};\n\nconst ASCII_CHARS =\n  \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS =\n  \" \u263A\u263B\u2665\u2666\u2663\u2660\u2022\u25D8\u25CB\u25D9\u2642\u2640\u266A\u266B\u263C\u25BA\u25C4\u2195\u203C\u00B6\u00A7\u25AC\u21A8\u2191\u2193\u2192\u2190\u221F\u2194\u25B2\u25BC !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = \"anonymous\";\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    img.onload = () => {\n      resolve(img);\n    };\n    img.onerror = () => {\n      reject(`failed to load ${src}`);\n    };\n  });\n}\n\nfunction isDataUrl(src: string): boolean {\n  return src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gconf: AssetsConf = {}): Assets {\n  const assets: AssetsCtx = {\n    lastLoaderID: 0,\n    loadRoot: \"\",\n    loaders: {},\n    sprites: {},\n    sounds: {},\n    fonts: {},\n    shaders: {},\n  };\n\n  function load<T>(prom: Promise<T>): Promise<T> {\n    const id = assets.lastLoaderID;\n    assets.loaders[id] = false;\n    assets.lastLoaderID++;\n    return prom\n      .catch(gconf.errHandler ?? console.error)\n      .finally(() => (assets.loaders[id] = true)) as Promise<T>;\n  }\n\n  // get current load progress\n  function loadProgress(): number {\n    let total = 0;\n    let loaded = 0;\n\n    for (const id in assets.loaders) {\n      total += 1;\n      if (assets.loaders[id]) {\n        loaded += 1;\n      }\n    }\n\n    return loaded / total;\n  }\n\n  // global load path prefix\n  function loadRoot(path?: string): string {\n    if (path !== undefined) {\n      assets.loadRoot = path;\n    }\n    return assets.loadRoot;\n  }\n\n  // TODO: support SpriteLoadSrc\n  function loadFont(\n    name: string | null,\n    src: string,\n    gw: number,\n    gh: number,\n    conf: FontLoadConf = {}\n  ): Promise<FontData> {\n    return load(\n      new Promise<FontData>((resolve, reject) => {\n        const path = isDataUrl(src) ? src : assets.loadRoot + src;\n        loadImg(path)\n          .then((img) => {\n            const font = gfx.makeFont(\n              gfx.makeTex(img, conf),\n              gw,\n              gh,\n              conf.chars ?? ASCII_CHARS\n            );\n            if (name) {\n              assets.fonts[name] = font;\n            }\n            resolve(font);\n          })\n          .catch(reject);\n      })\n    );\n  }\n\n  function getSprite(name: string): SpriteData | null {\n    return assets.sprites[name] ?? null;\n  }\n\n  function getSound(name: string): SoundData | null {\n    return assets.sounds[name] ?? null;\n  }\n\n  function getFont(name: string): FontData | null {\n    return assets.fonts[name] ?? null;\n  }\n\n  function getShader(name: string): ShaderData | null {\n    return assets.shaders[name] ?? null;\n  }\n\n  function slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n    const frames = [];\n    const qw = w / x;\n    const qh = h / y;\n    for (let j = 0; j < y; j++) {\n      for (let i = 0; i < x; i++) {\n        frames.push(quad(dx + i * qw, dy + j * qh, qw, qh));\n      }\n    }\n    return frames;\n  }\n\n  function loadSpriteAtlas(\n    src: SpriteLoadSrc,\n    data: SpriteAtlasData | string\n  ): Promise<Record<string, SpriteData>> {\n    if (typeof data === \"string\") {\n      // TODO: this adds a new loader asyncly\n      return load(\n        fetch(loadRoot() + data)\n          .then((res) => res.json())\n          .then((data2) => loadSpriteAtlas(src, data2))\n      );\n    }\n    return load(\n      loadSprite(null, src).then((atlas) => {\n        const map = {};\n        const w = atlas.tex.width;\n        const h = atlas.tex.height;\n        for (const name in data) {\n          const info = data[name];\n          const spr = {\n            tex: atlas.tex,\n            frames: slice(\n              info.sliceX,\n              info.sliceY,\n              info.x / w,\n              info.y / h,\n              info.width / w,\n              info.height / h\n            ),\n            anims: info.anims,\n          };\n          assets.sprites[name] = spr;\n          map[name] = spr;\n        }\n        return map;\n      })\n    );\n  }\n\n  // load a sprite to asset manager\n  function loadSprite(\n    name: string | null,\n    src: SpriteLoadSrc,\n    conf: SpriteLoadConf = {\n      sliceX: 1,\n      sliceY: 1,\n      anims: {},\n    }\n  ): Promise<SpriteData> {\n    // synchronously load sprite from local pixel data\n    function loadRawSprite(\n      name: string | null,\n      src: GfxTexData,\n      conf: SpriteLoadConf = {\n        sliceX: 1,\n        sliceY: 1,\n        anims: {},\n      }\n    ) {\n      const tex = gfx.makeTex(src, conf);\n      const frames = slice(conf.sliceX || 1, conf.sliceY || 1);\n\n      const sprite = {\n        tex: tex,\n        frames: frames,\n        anims: conf.anims || {},\n      };\n\n      if (name) {\n        assets.sprites[name] = sprite;\n      }\n\n      return sprite;\n    }\n\n    return load(\n      new Promise<SpriteData>((resolve, reject) => {\n        if (!src) {\n          return reject(`expected sprite src for \"${name}\"`);\n        }\n\n        // from url\n        if (typeof src === \"string\") {\n          const path = isDataUrl(src) ? src : assets.loadRoot + src;\n          loadImg(path)\n            .then((img) => resolve(loadRawSprite(name, img, conf)))\n            .catch(reject);\n        } else {\n          resolve(loadRawSprite(name, src, conf));\n        }\n      })\n    );\n  }\n\n  // TODO: accept raw json\n  function loadPedit(name: string, src: string): Promise<SpriteData> {\n    return load(\n      new Promise<SpriteData>((resolve, reject) => {\n        fetch(loadRoot() + src)\n          .then((res) => res.json())\n          .then(async (data) => {\n            const images = await Promise.all(data.frames.map(loadImg));\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = data.width;\n            canvas.height = data.height * data.frames.length;\n\n            const ctx = canvas.getContext(\"2d\");\n\n            images.forEach((img: HTMLImageElement, i) => {\n              ctx.drawImage(img, 0, i * data.height);\n            });\n\n            return loadSprite(name, canvas, {\n              sliceY: data.frames.length,\n              anims: data.anims,\n            });\n          })\n          .then(resolve)\n          .catch(reject);\n      })\n    );\n  }\n\n  // TODO: accept raw json\n  function loadAseprite(\n    name: string | null,\n    imgSrc: SpriteLoadSrc,\n    jsonSrc: string\n  ): Promise<SpriteData> {\n    return load(\n      new Promise<SpriteData>((resolve, reject) => {\n        const jsonPath = loadRoot() + jsonSrc;\n\n        loadSprite(name, imgSrc)\n          .then((sprite: SpriteData) => {\n            fetch(jsonPath)\n              .then((res) => res.json())\n              .then((data) => {\n                const size = data.meta.size;\n                sprite.frames = data.frames.map((f: any) => {\n                  return quad(\n                    f.frame.x / size.w,\n                    f.frame.y / size.h,\n                    f.frame.w / size.w,\n                    f.frame.h / size.h\n                  );\n                });\n                for (const anim of data.meta.frameTags) {\n                  if (anim.from === anim.to) {\n                    sprite.anims[anim.name] = anim.from;\n                  } else {\n                    sprite.anims[anim.name] = {\n                      from: anim.from,\n                      to: anim.to,\n                      // TODO: let users define these\n                      speed: 10,\n                      loop: true,\n                    };\n                  }\n                }\n                resolve(sprite);\n              })\n              .catch(reject);\n          })\n          .catch(reject);\n      })\n    );\n  }\n\n  function loadShader(\n    name: string | null,\n    vert?: string,\n    frag?: string,\n    isUrl: boolean = false\n  ): Promise<ShaderData> {\n    function loadRawShader(\n      name: string | null,\n      vert: string | null,\n      frag: string | null\n    ): ShaderData {\n      const shader = gfx.makeProgram(vert, frag);\n      if (name) {\n        assets.shaders[name] = shader;\n      }\n      return shader;\n    }\n\n    return load(\n      new Promise<ShaderData>((resolve, reject) => {\n        if (!vert && !frag) {\n          return reject(\"no shader\");\n        }\n\n        function resolveUrl(url?: string) {\n          return url\n            ? fetch(assets.loadRoot + url)\n                .then((r) => {\n                  if (r.ok) {\n                    return r.text();\n                  } else {\n                    throw new Error(`failed to load ${url}`);\n                  }\n                })\n                .catch(reject)\n            : new Promise((r) => r(null));\n        }\n\n        if (isUrl) {\n          Promise.all([resolveUrl(vert), resolveUrl(frag)])\n            .then(([vcode, fcode]: [string | null, string | null]) => {\n              resolve(loadRawShader(name, vcode, fcode));\n            })\n            .catch(reject);\n        } else {\n          try {\n            resolve(loadRawShader(name, vert, frag));\n          } catch (err) {\n            reject(err);\n          }\n        }\n      })\n    );\n  }\n\n  // TODO: accept dataurl\n  // load a sound to asset manager\n  function loadSound(name: string | null, src: string): Promise<SoundData> {\n    const url = assets.loadRoot + src;\n\n    return load(\n      new Promise<SoundData>((resolve, reject) => {\n        if (!src) {\n          return reject(`expected sound src for \"${name}\"`);\n        }\n\n        // from url\n        if (typeof src === \"string\") {\n          fetch(url)\n            .then((res) => {\n              if (res.ok) {\n                return res.arrayBuffer();\n              } else {\n                throw new Error(`failed to load ${url}`);\n              }\n            })\n            .then((data) => {\n              return new Promise((resolve2, reject2) => {\n                audio.ctx.decodeAudioData(data, resolve2, reject2);\n              });\n            })\n            .then((buf: AudioBuffer) => {\n              const snd = {\n                buf: buf,\n              };\n              if (name) {\n                assets.sounds[name] = snd;\n              }\n              resolve(snd);\n            })\n            .catch(reject);\n        }\n      })\n    );\n  }\n\n  function loadBean(name: string = \"bean\"): Promise<SpriteData> {\n    return loadSprite(name, beanSrc);\n  }\n\n  loadFont(\"apl386\", apl386Src, 45, 74);\n\n  loadFont(\"apl386o\", apl386oSrc, 45, 74);\n\n  loadFont(\"sink\", sinkSrc, 6, 8, {\n    chars: `\u2588\u263A\u263B\u2665\u2666\u2663\u2660\u25CF\u25CB\u25AA\u25A1\u25A0\u25D8\u266A\u266B\u2261\u25BA\u25C4\u2302\u00DE\u00C0\u00DF\u00D7\u00A5\u2191\u2193\u2192\u2190\u25CC\u25CF\u25BC\u25B2 !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~\u03A7\u2591\u2592\u2593\u1E00\u1E01\u1E02\u2502\u252C\u2524\u250C\u2510\u1E03\u1E04\u253C\u1E05\u1E06\u1E07\u1E08\u1E09\u1E0A\u1E0B\u1E0C\u2500\u251C\u2534\u2514\u2518\u1E0D\u1E0E\u205E\u1E0F\u1E10\u1E11\u1E12\u1E13\u1E14\u1E15\u1E16\u1E17\u1E18\u2584\u1E19\u1E1A\u1E1B\u1E1C\u2026\u1E1D\u1E1E\u1E1F\u1E20\u1E21\u1E22\u1E23\u1E24\u1E25\u1E26\u258C\u2590\u1E27\u1E28\u1E29\u1E2A\u1E2B\u1E2C\u1E2D\u1E2E\u1E2F\u1E30\u1E31\u1E32\u1E33\u1E34\u1E35\u1E36\u1E37\u1E38\u1E39\u1E3A\u1E3B\u1E3C\u1E3D\u1E3E\u1E3F\u1E40\u1E41\u1E42\u1E43\u1E44\u1E45\u1E46\u1E47\u1E48\u1E49\u1E4A\u1E4B\u1E4C\u1E4D\u1E4E\u1E4F\u1E50\u1E51\u1E52\u1E53\u1E54\u1E55\u1E56\u1E57\u1E58\u1E59\u1E5A\u1E5B\u1E5C\u1E5D\u1E5E\u1E5F\u1E60\u1E61\u1E62\u1E63\u1E64\u1E65\u1E66\u1E67\u1E68\u1E69\u1E6A\u1E6B\u1E6C\u1E6D\u1E6E\u1E6F\u1E70\u1E71\u1E72\u1E73\u1E74\u1E75\u1E76\u1E77\u1E78\u1E79\u1E7A\u1E7B\u1E7C`,\n  });\n\n  loadFont(\"sinko\", sinkoSrc, 8, 10);\n\n  return {\n    loadRoot,\n    loadSprite,\n    loadSpriteAtlas,\n    loadPedit,\n    loadAseprite,\n    loadBean,\n    loadSound,\n    loadFont,\n    loadShader,\n    loadProgress,\n    load,\n    sprites: assets.sprites,\n    fonts: assets.fonts,\n    sounds: assets.sounds,\n    shaders: assets.shaders,\n  };\n}\n\nexport { AssetsConf, Assets, assetsInit, ASCII_CHARS, CP437_CHARS };\n", "import {\n\tvec2,\n\trgb,\n\tmap,\n} from \"./math\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerConf = {\n\tmax?: number,\n};\n\ntype Logger = {\n\tdraw(),\n\tinfo(msg: string),\n\terror(msg: string),\n\tclear(),\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, conf: LoggerConf = {\n\tmax: 8,\n}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = conf.max ?? 8;\n\n\t// TODO: draw rects first to reduce draw calls\n\t// TODO: make log and progress bar fixed size independent of global scale\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst txtAlpha = map(i, 0, max, 1, 0.5);\n\t\t\tconst bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgb(255, 255, 255);\n\t\t\t\t\tcase \"error\": return rgb(255, 0, 127);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText({\n\t\t\t\ttext: log.msg,\n\t\t\t\tfont: assets.fonts[\"sink\"],\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t\topacity: txtAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: pos,\n\t\t\t\twidth: ftext.width,\n\t\t\t\theight: ftext.height,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\topacity: bgAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n", "// explosion\n\n// @ts-ignore\nimport kaSrc from \"./ka.png\";\n// @ts-ignore\nimport boomSrc from \"./boom.png\";\n\ninterface BoomConf {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\ninterface Kaboom {\n\t/**\n\t * Remove kaboom.\n\t */\n\tdestroy(): void,\n}\n\ninterface ExplodeComp extends Comp {\n}\n\ninterface KaboomPlug {\n\taddKaboom(pos: Vec2, conf?: BoomConf): Kaboom,\n}\n\nexport default (k: KaboomCtx) => {\n\n\tfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\t\tlet time = 0;\n\t\treturn {\n\t\t\tid: \"explode\",\n\t\t\trequire: [ \"scale\", ],\n\t\t\tupdate() {\n\t\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tk.destroy(this);\n\t\t\t\t}\n\t\t\t\tthis.scale = k.vec2(s);\n\t\t\t\ttime += k.dt();\n\t\t\t},\n\t\t};\n\t}\n\n\tlet kaSprite = null;\n\tlet boomSprite = null;\n\n\tk.loadSprite(null, kaSrc).then((spr) => kaSprite = spr);\n\tk.loadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n\tfunction addKaboom(pos: Vec2, conf: BoomConf = {}): Kaboom {\n\n\t\tconst speed = (conf.speed || 1) * 5;\n\t\tconst scale = conf.scale || 1;\n\n\t\tconst boom = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(boomSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\texplode(speed, scale),\n\t\t\t...(conf.boomComps ?? (() => []))(),\n\t\t]);\n\n\t\tconst ka = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(kaSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\tk.timer(0.4 / speed, () => ka.use(explode(speed, scale))),\n\t\t\t...(conf.kaComps ?? (() => []))(),\n\t\t]);\n\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tk.destroy(ka);\n\t\t\t\tk.destroy(boom);\n\t\t\t},\n\t\t};\n\n\t}\n\n\treturn {\n\t\taddKaboom,\n\t};\n\n};\n", "import {\n  vec2,\n  mat4,\n  quad,\n  rgb,\n  rng,\n  rand,\n  randi,\n  randSeed,\n  chance,\n  choose,\n  clamp,\n  lerp,\n  map,\n  mapc,\n  wave,\n  testLineLine,\n  testLineLineT,\n  testRectRect2,\n  testRectLine,\n  testRectPt,\n  minkDiff,\n  testRectRect,\n  dir,\n  deg2rad,\n  rad2deg,\n  isVec2,\n} from \"./math\";\n\nimport { originPt, gfxInit } from \"./gfx\";\n\nimport { appInit } from \"./app\";\n\nimport { audioInit } from \"./audio\";\n\nimport { assetsInit, ASCII_CHARS, CP437_CHARS } from \"./assets\";\n\nimport { loggerInit } from \"./logger\";\n\nimport { Net, netInit } from \"./net\";\n\nimport { IDList } from \"./utils\";\n\nimport kaboomPlugin from \"./plugins/kaboom\";\n\n// @ts-ignore\nmodule.exports = (gconf: KaboomConf = {}): KaboomCtx => {\n  const audio = audioInit();\n\n  const app = appInit({\n    width: gconf.width,\n    height: gconf.height,\n    scale: gconf.scale,\n    crisp: gconf.crisp,\n    canvas: gconf.canvas,\n    root: gconf.root,\n    stretch: gconf.stretch,\n    touchToMouse: gconf.touchToMouse ?? true,\n    audioCtx: audio.ctx,\n  });\n\n  const gfx = gfxInit(app.gl, {\n    background: gconf.background ? rgb(gconf.background) : undefined,\n    width: gconf.width,\n    height: gconf.height,\n    scale: gconf.scale,\n    texFilter: gconf.texFilter,\n    stretch: gconf.stretch,\n    letterbox: gconf.letterbox,\n  });\n\n  const { width, height } = gfx;\n\n  const assets = assetsInit(gfx, audio, {\n    errHandler: (err: string) => {\n      logger.error(err);\n    },\n  });\n\n  const logger = loggerInit(gfx, assets, {\n    max: gconf.logMax,\n  });\n\n  const DEF_FONT = \"apl386o\";\n  const DBG_FONT = \"sink\";\n\n  function dt() {\n    return app.dt() * debug.timeScale;\n  }\n\n  // TODO: clean\n  function play(id: string, conf: AudioPlayConf = {}): AudioPlay {\n    const pb = audio.play({\n      buf: new AudioBuffer({\n        length: 1,\n        numberOfChannels: 1,\n        sampleRate: 44100,\n      }),\n    });\n    ready(() => {\n      const snd = assets.sounds[id];\n      if (!snd) {\n        throw new Error(`sound not found: \"${id}\"`);\n      }\n      const pb2 = audio.play(snd, conf);\n      for (const k in pb2) {\n        pb[k] = pb2[k];\n      }\n    });\n    return pb;\n  }\n\n  function mousePos(): Vec2 {\n    return app.mousePos();\n  }\n\n  function mouseWorldPos(): Vec2 {\n    return game.camMousePos;\n  }\n\n  // wrapper around gfx.drawTexture to integrate with sprite assets mananger / frame anim\n  function drawSprite(conf: DrawSpriteConf) {\n    if (!conf.sprite) {\n      throw new Error(`drawSprite() requires property \"sprite\"`);\n    }\n    const spr = (() => {\n      if (typeof conf.sprite === \"string\") {\n        return assets.sprites[conf.sprite];\n      } else {\n        return conf.sprite;\n      }\n    })();\n    if (!spr) {\n      throw new Error(`sprite not found: \"${conf.sprite}\"`);\n    }\n    const q = spr.frames[conf.frame ?? 0];\n    if (!q) {\n      throw new Error(`frame not found: ${conf.frame ?? 0}`);\n    }\n    gfx.drawTexture({\n      ...conf,\n      tex: spr.tex,\n      quad: q.scale(conf.quad || quad(0, 0, 1, 1)),\n    });\n  }\n\n  // wrapper around gfx.drawText to integrate with font assets mananger / default font\n  function drawText(conf: DrawTextConf) {\n    // @ts-ignore\n    const fid = conf.font ?? DEF_FONT;\n    const font = assets.fonts[fid];\n    if (!font) {\n      throw new Error(`font not found: ${fid}`);\n    }\n    gfx.drawText({\n      ...conf,\n      font: font,\n    });\n  }\n\n  const DEF_GRAVITY = 1600;\n  const DEF_ORIGIN = \"topleft\";\n\n  interface Game {\n    loaded: boolean;\n    events: Record<string, IDList<() => void>>;\n    objEvents: Record<string, IDList<TaggedEvent>>;\n    objs: IDList<Character>;\n    timers: IDList<Timer>;\n    cam: Camera;\n    camMousePos: Vec2;\n    camMatrix: Mat4;\n    gravity: number;\n    layers: Record<string, number>;\n    defLayer: string | null;\n    on<F>(ev: string, cb: F): EventCanceller;\n    trigger(ev: string, ...args);\n    scenes: Record<SceneID, SceneDef>;\n    paused: boolean;\n  }\n\n  type Camera = {\n    pos: Vec2;\n    scale: Vec2;\n    angle: number;\n    shake: number;\n  };\n\n  type Layer = {\n    order: number;\n  };\n\n  type TaggedEvent = {\n    tag: string;\n    cb: (...args) => void;\n  };\n\n  type KeyEvent = {\n    key: string;\n    cb();\n  };\n\n  type MouseInputEvent = {\n    cb();\n  };\n\n  type LoadEvent = () => void;\n  type NextFrameEvent = () => void;\n  type MouseEvent = () => void;\n  type CharEvent = (ch: string) => void;\n\n  const game: Game = {\n    loaded: false,\n\n    // event callbacks\n    events: {},\n    objEvents: {},\n\n    // in game pool\n    objs: new IDList(),\n    timers: new IDList(),\n\n    // cam\n    cam: {\n      pos: center(),\n      scale: vec2(1),\n      angle: 0,\n      shake: 0,\n    },\n\n    camMousePos: app.mousePos(),\n    camMatrix: mat4(),\n\n    // misc\n    layers: {},\n    defLayer: null,\n    gravity: DEF_GRAVITY,\n\n    on<F>(ev: string, cb: F): EventCanceller {\n      if (!this.events[ev]) {\n        this.events[ev] = new IDList();\n      }\n      return this.events[ev].pushd(cb);\n    },\n\n    trigger(ev: string, ...args) {\n      if (this.events[ev]) {\n        this.events[ev].forEach((cb) => cb(...args));\n      }\n    },\n\n    scenes: {},\n    paused: false,\n  };\n\n  function layers(list: string[], def?: string) {\n    list.forEach((name, idx) => {\n      game.layers[name] = idx + 1;\n    });\n\n    if (def) {\n      game.defLayer = def;\n    }\n  }\n\n  function camPos(...pos): Vec2 {\n    if (pos.length > 0) {\n      game.cam.pos = vec2(...pos);\n    }\n    return game.cam.pos.clone();\n  }\n\n  function camScale(...scale): Vec2 {\n    if (scale.length > 0) {\n      game.cam.scale = vec2(...scale);\n    }\n    return game.cam.scale.clone();\n  }\n\n  function camRot(angle: number): number {\n    if (angle !== undefined) {\n      game.cam.angle = angle;\n    }\n    return game.cam.angle;\n  }\n\n  function shake(intensity: number = 12) {\n    game.cam.shake = intensity;\n  }\n\n  function toScreen(p: Vec2): Vec2 {\n    return game.camMatrix.multVec2(p);\n  }\n\n  function toWorld(p: Vec2): Vec2 {\n    return game.camMatrix.invert().multVec2(p);\n  }\n\n  const COMP_DESC = new Set([\"id\", \"require\"]);\n\n  const COMP_EVENTS = new Set([\n    \"add\",\n    \"load\",\n    \"update\",\n    \"draw\",\n    \"destroy\",\n    \"inspect\",\n  ]);\n\n  function make<T>(comps: CompList<T>): Character<T> {\n    const compStates = new Map();\n    const customState = {};\n    const events = {};\n\n    const obj = {\n      _id: null,\n      hidden: false,\n      paused: false,\n\n      // use a comp, or tag\n      use(comp: Comp | Tag) {\n        if (!comp) {\n          return;\n        }\n\n        // tag\n        if (typeof comp === \"string\") {\n          return this.use({\n            id: comp,\n          });\n        }\n\n        // clear if overwrite\n        if (comp.id) {\n          this.unuse(comp.id);\n          compStates.set(comp.id, {});\n        }\n\n        // state source location\n        const state = comp.id ? compStates.get(comp.id) : customState;\n\n        state.cleanups = [];\n\n        for (const k in comp) {\n          if (COMP_DESC.has(k)) {\n            continue;\n          }\n\n          // event / custom method\n          if (typeof comp[k] === \"function\") {\n            const func = comp[k].bind(this);\n            if (COMP_EVENTS.has(k)) {\n              state.cleanups.push(this.on(k, func));\n              state[k] = func;\n              continue;\n            } else {\n              state[k] = func;\n            }\n          } else {\n            state[k] = comp[k];\n          }\n\n          if (this[k] === undefined) {\n            // assign comp fields to game obj\n            Object.defineProperty(this, k, {\n              get: () => state[k],\n              set: (val) => (state[k] = val),\n              configurable: true,\n              enumerable: true,\n            });\n          }\n        }\n\n        const checkDeps = () => {\n          if (!comp.require) {\n            return;\n          }\n          for (const dep of comp.require) {\n            if (!this.c(dep)) {\n              throw new Error(`comp '${comp.id}' requires comp '${dep}'`);\n            }\n          }\n        };\n\n        // check deps or run add event\n        if (this.exists()) {\n          if (comp.add) {\n            comp.add.call(this);\n          }\n          if (comp.load) {\n            ready(() => comp.load.call(this));\n          }\n          checkDeps();\n        } else {\n          if (comp.require) {\n            state.cleanups.push(\n              this.on(\"add\", () => {\n                checkDeps();\n              })\n            );\n          }\n        }\n      },\n\n      unuse(id: Tag) {\n        if (compStates.has(id)) {\n          const comp = compStates.get(id);\n          comp.cleanups.forEach((f) => f());\n          for (const k in comp) {\n            delete comp[k];\n          }\n        }\n        compStates.delete(id);\n      },\n\n      c(id: Tag): Comp {\n        return compStates.get(id);\n      },\n\n      exists(): boolean {\n        return this._id !== null;\n      },\n\n      is(tag: Tag | Tag[]): boolean {\n        if (tag === \"*\") {\n          return true;\n        }\n        if (Array.isArray(tag)) {\n          for (const t of tag) {\n            if (!this.c(t)) {\n              return false;\n            }\n          }\n          return true;\n        } else {\n          return this.c(tag) != null;\n        }\n      },\n\n      on(ev: string, cb): EventCanceller {\n        if (!events[ev]) {\n          events[ev] = new IDList();\n        }\n        return events[ev].pushd(cb);\n      },\n\n      action(cb: () => void): EventCanceller {\n        return this.on(\"update\", cb);\n      },\n\n      trigger(ev: string, ...args): void {\n        if (events[ev]) {\n          events[ev].forEach((cb) => cb.call(this, ...args));\n        }\n\n        const gEvents = game.objEvents[ev];\n\n        if (gEvents) {\n          gEvents.forEach((e) => {\n            if (this.is(e.tag)) {\n              e.cb(this, ...args);\n            }\n          });\n        }\n      },\n\n      destroy() {\n        if (!this.exists()) {\n          return;\n        }\n\n        this.trigger(\"destroy\");\n        game.objs.delete(this._id);\n        this._id = null;\n      },\n\n      inspect() {\n        const info = {};\n        for (const [tag, comp] of compStates) {\n          info[tag] = comp.inspect ? comp.inspect() : null;\n        }\n        return info;\n      },\n    };\n\n    for (const comp of comps) {\n      obj.use(comp);\n    }\n\n    return obj as unknown as Character<T>;\n  }\n\n  function add<T>(comps: CompList<T>): Character<T> {\n    const obj = make(comps);\n    obj._id = game.objs.push(obj);\n    obj.trigger(\"add\");\n    ready(() => obj.trigger(\"load\"));\n    return obj;\n  }\n\n  function readd(obj: Character): Character {\n    if (!obj.exists()) {\n      return;\n    }\n    game.objs.delete(obj._id);\n    obj._id = game.objs.push(obj);\n    return obj;\n  }\n\n  // add an event to a tag\n  function on(\n    event: string,\n    tag: Tag,\n    cb: (obj: Character, ...args) => void\n  ): EventCanceller {\n    if (!game.objEvents[event]) {\n      game.objEvents[event] = new IDList();\n    }\n    return game.objEvents[event].pushd({\n      tag: tag,\n      cb: cb,\n    });\n  }\n\n  // TODO: detect if is currently in another action?\n  // add update event to a tag or global update\n  function action(\n    tag: Tag | (() => void),\n    cb?: (obj: Character) => void\n  ): EventCanceller {\n    if (typeof tag === \"function\" && cb === undefined) {\n      return add([{ update: tag }]).destroy;\n    } else if (typeof tag === \"string\") {\n      return on(\"update\", tag, cb);\n    }\n  }\n\n  // add draw event to a tag or global draw\n  function render(tag: Tag | (() => void), cb?: (obj: Character) => void) {\n    if (typeof tag === \"function\" && cb === undefined) {\n      return add([{ draw: tag }]).destroy;\n    } else if (typeof tag === \"string\") {\n      return on(\"draw\", tag, cb);\n    }\n  }\n\n  // add an event that runs with objs with t1 collides with objs with t2\n  function collides(\n    t1: Tag,\n    t2: Tag,\n    f: (a: Character, b: Character) => void\n  ): EventCanceller {\n    const e1 = on(\"collide\", t1, (a, b, side) => b.is(t2) && f(a, b));\n    const e2 = on(\"collide\", t2, (a, b, side) => b.is(t1) && f(b, a));\n    const e3 = action(t1, (o1: Character) => {\n      if (!o1.area) {\n        throw new Error(\n          \"collides() requires the object to have area() component\"\n        );\n      }\n      o1._checkCollisions(t2, (o2) => {\n        f(o1, o2);\n      });\n    });\n    return () => [e1, e2, e3].forEach((f) => f());\n  }\n\n  // add an event that runs when objs with tag t is clicked\n  function clicks(t: string, f: (obj: Character) => void): EventCanceller {\n    return action(t, (o: Character) => {\n      if (o.isClicked()) {\n        f(o);\n      }\n    });\n  }\n\n  // add an event that runs when objs with tag t is hovered\n  function hovers(\n    t: string,\n    onHover: (obj: Character) => void,\n    onNotHover?: (obj: Character) => void\n  ): EventCanceller {\n    return action(t, (o: Character) => {\n      if (o.isHovering()) {\n        onHover(o);\n      } else {\n        if (onNotHover) {\n          onNotHover(o);\n        }\n      }\n    });\n  }\n\n  // add an event that'd be run after t\n  function wait(t: number, f?: () => void): Promise<void> {\n    return new Promise((resolve) => {\n      game.timers.push({\n        time: t,\n        action: () => {\n          if (f) {\n            f();\n          }\n          resolve();\n        },\n      });\n    });\n  }\n\n  // add an event that's run every t seconds\n  function loop(t: number, f: () => void): EventCanceller {\n    let stopped = false;\n\n    const newF = () => {\n      if (stopped) {\n        return;\n      }\n      f();\n      wait(t, newF);\n    };\n\n    newF();\n\n    return () => (stopped = true);\n  }\n\n  // input callbacks\n  function keyDown(k: Key | Key[], f: () => void): EventCanceller {\n    if (Array.isArray(k)) {\n      const cancellers = k.map((key) => keyDown(key, f));\n      return () => cancellers.forEach((cb) => cb());\n    }\n    {\n      return game.on(\"input\", () => app.keyDown(k) && f());\n    }\n  }\n\n  function keyPress(\n    k: Key | Key[] | (() => void),\n    f?: () => void\n  ): EventCanceller {\n    if (Array.isArray(k)) {\n      const cancellers = k.map((key) => keyPress(key, f));\n      return () => cancellers.forEach((cb) => cb());\n    } else if (typeof k === \"function\") {\n      return game.on(\"input\", () => app.keyPressed() && k());\n    } else {\n      return game.on(\"input\", () => app.keyPressed(k) && f());\n    }\n  }\n\n  function keyPressRep(\n    k: Key | Key[] | (() => void),\n    f?: () => void\n  ): EventCanceller {\n    if (Array.isArray(k)) {\n      const cancellers = k.map((key) => keyPressRep(key, f));\n      return () => cancellers.forEach((cb) => cb());\n    } else if (typeof k === \"function\") {\n      return game.on(\"input\", () => app.keyPressed() && k());\n    } else {\n      return game.on(\"input\", () => app.keyPressedRep(k) && f());\n    }\n  }\n\n  function keyRelease(\n    k: Key | Key[] | (() => void),\n    f?: () => void\n  ): EventCanceller {\n    if (Array.isArray(k)) {\n      const cancellers = k.map((key) => keyRelease(key, f));\n      return () => cancellers.forEach((cb) => cb());\n    } else if (typeof k === \"function\") {\n      return game.on(\"input\", () => app.keyPressed() && k());\n    } else {\n      return game.on(\"input\", () => app.keyReleased(k) && f());\n    }\n  }\n\n  function mouseDown(f: (pos: Vec2) => void): EventCanceller {\n    return game.on(\"input\", () => app.mouseDown() && f(mousePos()));\n  }\n\n  function mouseClick(f: (pos: Vec2) => void): EventCanceller {\n    return game.on(\"input\", () => app.mouseClicked() && f(mousePos()));\n  }\n\n  function mouseRelease(f: (pos: Vec2) => void): EventCanceller {\n    return game.on(\"input\", () => app.mouseReleased() && f(mousePos()));\n  }\n\n  function mouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n    return game.on(\n      \"input\",\n      () => app.mouseMoved() && f(mousePos(), app.mouseDeltaPos())\n    );\n  }\n\n  function charInput(f: (ch: string) => void): EventCanceller {\n    return game.on(\"input\", () => app.charInputted().forEach((ch) => f(ch)));\n  }\n\n  // TODO: put this in app.ts's and handle in game loop\n  app.canvas.addEventListener(\"touchstart\", (e) => {\n    [...e.changedTouches].forEach((t) => {\n      game.trigger(\n        \"touchStart\",\n        t.identifier,\n        vec2(t.clientX, t.clientY).scale(1 / app.scale)\n      );\n    });\n  });\n\n  app.canvas.addEventListener(\"touchmove\", (e) => {\n    [...e.changedTouches].forEach((t) => {\n      game.trigger(\n        \"touchMove\",\n        t.identifier,\n        vec2(t.clientX, t.clientY).scale(1 / app.scale)\n      );\n    });\n  });\n\n  app.canvas.addEventListener(\"touchmove\", (e) => {\n    [...e.changedTouches].forEach((t) => {\n      game.trigger(\n        \"touchEnd\",\n        t.identifier,\n        vec2(t.clientX, t.clientY).scale(1 / app.scale)\n      );\n    });\n  });\n\n  function touchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n    return game.on(\"touchStart\", f);\n  }\n\n  function touchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n    return game.on(\"touchMove\", f);\n  }\n\n  function touchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n    return game.on(\"touchEnd\", f);\n  }\n\n  function regDebugInput() {\n    keyPress(\"f1\", () => {\n      debug.inspect = !debug.inspect;\n    });\n\n    keyPress(\"f2\", () => {\n      debug.clearLog();\n    });\n\n    keyPress(\"f8\", () => {\n      debug.paused = !debug.paused;\n      logger.info(`${debug.paused ? \"paused\" : \"unpaused\"}`);\n    });\n\n    keyPress(\"f7\", () => {\n      debug.timeScale = clamp(debug.timeScale - 0.2, 0, 2);\n      logger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n    });\n\n    keyPress(\"f9\", () => {\n      debug.timeScale = clamp(debug.timeScale + 0.2, 0, 2);\n      logger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n    });\n\n    keyPress(\"f10\", () => {\n      debug.stepFrame();\n      logger.info(`stepped frame`);\n    });\n  }\n\n  // TODO: cache sorted list\n  // get all objects with tag\n  function get(t?: string): Character[] {\n    const objs = [...game.objs.values()].sort((o1, o2) => {\n      const l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n      const l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\n      // if on same layer, use \"z\" comp to decide which is on top, if given\n      if (l1 == l2) {\n        return (o1.z ?? 0) - (o2.z ?? 0);\n      } else {\n        return l1 - l2;\n      }\n    });\n\n    if (!t) {\n      return objs;\n    } else {\n      return objs.filter((obj) => obj.is(t));\n    }\n  }\n\n  // apply a function to all objects currently in game with tag t\n  function every<T>(\n    t: string | ((obj: Character) => T),\n    f?: (obj: Character) => T\n  ) {\n    if (typeof t === \"function\" && f === undefined) {\n      return get().forEach((obj) => obj.exists() && t(obj));\n    } else if (typeof t === \"string\") {\n      return get(t).forEach((obj) => obj.exists() && f(obj));\n    }\n  }\n\n  // every but in reverse order\n  function revery<T>(\n    t: string | ((obj: Character) => T),\n    f?: (obj: Character) => T\n  ) {\n    if (typeof t === \"function\" && f === undefined) {\n      return get()\n        .reverse()\n        .forEach((obj) => obj.exists() && t(obj));\n    } else if (typeof t === \"string\") {\n      return get(t)\n        .reverse()\n        .forEach((obj) => obj.exists() && f(obj));\n    }\n  }\n\n  // destroy an obj\n  function destroy(obj: Character) {\n    obj.destroy();\n  }\n\n  // destroy all obj with the tag\n  function destroyAll(t: string) {\n    every(t, destroy);\n  }\n\n  // get / set gravity\n  function gravity(g?: number): number {\n    if (g !== undefined) {\n      game.gravity = g;\n    }\n    return game.gravity;\n  }\n\n  function regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n    // TODO\n  }\n\n  // TODO: cleaner pause logic\n  function gameFrame(ignorePause?: boolean) {\n    game.trigger(\"next\");\n    delete game.events[\"next\"];\n\n    const doUpdate = ignorePause || !debug.paused;\n\n    if (doUpdate) {\n      // update timers\n      game.timers.forEach((t, id) => {\n        t.time -= dt();\n        if (t.time <= 0) {\n          t.action();\n          game.timers.delete(id);\n        }\n      });\n\n      // update every obj\n      revery((obj) => {\n        if (!obj.paused) {\n          obj.trigger(\"update\", obj);\n        }\n      });\n    }\n\n    // calculate camera matrix\n    const size = vec2(width(), height());\n    const cam = game.cam;\n    const shake = dir(rand(0, 360)).scale(cam.shake);\n\n    cam.shake = lerp(cam.shake, 0, 5 * dt());\n    game.camMatrix = mat4()\n      .translate(size.scale(0.5))\n      .scale(cam.scale)\n      .rotateZ(cam.angle)\n      .translate(size.scale(-0.5))\n      .translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake));\n\n    // draw every obj\n    every((obj) => {\n      if (!obj.hidden) {\n        gfx.pushTransform();\n\n        if (!obj.fixed) {\n          gfx.applyMatrix(game.camMatrix);\n        }\n\n        obj.trigger(\"draw\");\n        gfx.popTransform();\n      }\n    });\n  }\n\n  function drawInspect() {\n    let inspecting = null;\n    const font = assets.fonts[DBG_FONT];\n    const lcolor = rgb(gconf.inspectColor ?? [0, 0, 255]);\n\n    function drawInspectTxt(pos, txt) {\n      const s = gfx.scale();\n      const pad = vec2(6).scale(1 / s);\n\n      const ftxt = gfx.fmtText({\n        text: txt,\n        font: font,\n        size: 16 / s,\n        pos: pos.add(vec2(pad.x, pad.y)),\n        color: rgb(0, 0, 0),\n      });\n\n      const bw = ftxt.width + pad.x * 2;\n      const bh = ftxt.height + pad.x * 2;\n\n      gfx.pushTransform();\n\n      if (pos.x + bw >= width()) {\n        gfx.pushTranslate(vec2(-bw, 0));\n      }\n\n      if (pos.y + bh >= height()) {\n        gfx.pushTranslate(vec2(0, -bh));\n      }\n\n      gfx.drawRect({\n        pos: pos,\n        width: bw,\n        height: bh,\n        color: rgb(255, 255, 255),\n        outline: {\n          width: 2 / s,\n          color: rgb(0, 0, 0),\n        },\n      });\n\n      gfx.drawFmtText(ftxt);\n      gfx.popTransform();\n    }\n\n    // draw area outline\n    every((obj) => {\n      if (!obj.area) {\n        return;\n      }\n\n      if (obj.hidden) {\n        return;\n      }\n\n      const scale =\n        gfx.scale() *\n        (obj.fixed ? 1 : (game.cam.scale.x + game.cam.scale.y) / 2);\n\n      if (!obj.fixed) {\n        gfx.pushTransform();\n        gfx.applyMatrix(game.camMatrix);\n      }\n\n      if (!inspecting) {\n        if (obj.isHovering()) {\n          inspecting = obj;\n        }\n      }\n\n      const lwidth = (inspecting === obj ? 8 : 4) / scale;\n      const a = obj.worldArea();\n      const w = a.p2.x - a.p1.x;\n      const h = a.p2.y - a.p1.y;\n\n      gfx.drawRect({\n        pos: a.p1,\n        width: w,\n        height: h,\n        outline: {\n          width: lwidth,\n          color: lcolor,\n        },\n        fill: false,\n      });\n\n      if (!obj.fixed) {\n        gfx.popTransform();\n      }\n    });\n\n    if (inspecting) {\n      const lines = [];\n      const data = inspecting.inspect();\n\n      for (const tag in data) {\n        if (data[tag]) {\n          lines.push(`${tag}: ${data[tag]}`);\n        } else {\n          lines.push(`${tag}`);\n        }\n      }\n\n      drawInspectTxt(mousePos(), lines.join(\"\\n\"));\n    }\n\n    drawInspectTxt(vec2(0), `FPS: ${app.fps()}`);\n  }\n\n  // TODO: have velocity here?\n  function pos(...args): PosComp {\n    return {\n      id: \"pos\",\n      pos: vec2(...args),\n\n      // TODO: clean\n      moveBy(...args) {\n        const p = vec2(...args);\n        let dx = p.x;\n        let dy = p.y;\n        let col = null;\n\n        if (this.solid && this.area) {\n          let a1 = this.worldArea();\n\n          // TODO: definitely shouln't iterate through all solid objs\n          every((other) => {\n            // make sure we still exist, don't check with self, and only\n            // check with other solid objects\n            if (!this.exists() || other === this || !other.solid) {\n              return;\n            }\n\n            const a2 = other.worldArea();\n            let md = minkDiff(a2, a1);\n\n            // if they're already overlapping, push them away first\n            if (testRectPt(md, vec2(0))) {\n              let dist = Math.min(\n                Math.abs(md.p1.x),\n                Math.abs(md.p2.x),\n                Math.abs(md.p1.y),\n                Math.abs(md.p2.y)\n              );\n\n              const res = (() => {\n                switch (dist) {\n                  case Math.abs(md.p1.x):\n                    return vec2(dist, 0);\n                  case Math.abs(md.p2.x):\n                    return vec2(-dist, 0);\n                  case Math.abs(md.p1.y):\n                    return vec2(0, dist);\n                  case Math.abs(md.p2.y):\n                    return vec2(0, -dist);\n                }\n              })();\n\n              this.pos = this.pos.sub(res);\n\n              // calculate new mink diff\n              a1 = this.worldArea();\n              md = minkDiff(a2, a1);\n            }\n\n            const ray = { p1: vec2(0), p2: vec2(dx, dy) };\n            let minT = 1;\n            let minSide = \"right\";\n            const p1 = md.p1;\n            const p2 = vec2(md.p1.x, md.p2.y);\n            const p3 = md.p2;\n            const p4 = vec2(md.p2.x, md.p1.y);\n            let numCols = 0;\n            const lines = {\n              right: { p1: p1, p2: p2 },\n              top: { p1: p2, p2: p3 },\n              left: { p1: p3, p2: p4 },\n              bottom: { p1: p4, p2: p1 },\n            };\n\n            for (const s in lines) {\n              const line = lines[s];\n              // if moving along a side, we forgive\n              if (\n                (dx === 0 && line.p1.x === 0 && line.p2.x === 0) ||\n                (dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n              ) {\n                minT = 1;\n                break;\n              }\n              const t = testLineLineT(ray, line);\n              if (t != null) {\n                numCols++;\n                if (t < minT) {\n                  minT = t;\n                  minSide = s;\n                }\n              }\n            }\n\n            // if moving away, we forgive\n            if (\n              minT < 1 &&\n              !(minT === 0 && numCols == 1 && !testRectPt(md, vec2(dx, dy)))\n            ) {\n              dx *= minT;\n              dy *= minT;\n              col = {\n                obj: other,\n                side: minSide,\n              };\n            }\n          });\n        }\n\n        this.pos.x += dx;\n        this.pos.y += dy;\n\n        if (col) {\n          const opposite = {\n            right: \"left\",\n            left: \"right\",\n            top: \"bottom\",\n            bottom: \"top\",\n          };\n          this.trigger(\"collide\", col.obj, col.side);\n          col.obj.trigger(\"collide\", this, opposite[col.side]);\n        }\n\n        return col;\n      },\n\n      // move with velocity (pixels per second)\n      move(...args) {\n        return this.moveBy(vec2(...args).scale(dt()));\n      },\n\n      // move to a destination, with optional speed\n      moveTo(...args) {\n        if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n          return this.moveTo(vec2(args[0], args[1]), args[2]);\n        }\n        const dest = args[0];\n        const speed = args[1];\n        if (speed === undefined) {\n          this.pos = vec2(dest);\n          return;\n        }\n        const diff = dest.sub(this.pos);\n        if (diff.len() <= speed * dt()) {\n          this.pos = vec2(dest);\n          return;\n        }\n        this.move(diff.unit().scale(speed));\n      },\n\n      // get the screen position (transformed by camera)\n      screenPos(): Vec2 {\n        if (this.fixed) {\n          return this.pos;\n        } else {\n          return toScreen(this.pos);\n        }\n      },\n\n      inspect() {\n        return `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n      },\n    };\n  }\n\n  // TODO: allow single number assignment\n  function scale(...args): ScaleComp {\n    if (args.length === 0) {\n      return scale(1);\n    }\n    return {\n      id: \"scale\",\n      scale: vec2(...args),\n      scaleTo(...args) {\n        this.scale = vec2(...args);\n      },\n      inspect() {\n        return `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n      },\n    };\n  }\n\n  function rotate(r: number): RotateComp {\n    return {\n      id: \"rotate\",\n      angle: r ?? 0,\n      inspect() {\n        return `${Math.round(this.angle)}`;\n      },\n    };\n  }\n\n  function color(...args): ColorComp {\n    return {\n      id: \"color\",\n      color: rgb(...args),\n      inspect() {\n        return this.color.str();\n      },\n    };\n  }\n\n  function toFixed(n: number, f: number) {\n    return Number(n.toFixed(f));\n  }\n\n  function opacity(a: number): OpacityComp {\n    return {\n      id: \"opacity\",\n      opacity: a ?? 1,\n      inspect() {\n        return `${toFixed(this.opacity, 2)}`;\n      },\n    };\n  }\n\n  function origin(o: Origin | Vec2): OriginComp {\n    if (!o) {\n      throw new Error(\"please define an origin\");\n    }\n    return {\n      id: \"origin\",\n      origin: o,\n      inspect() {\n        if (typeof this.origin === \"string\") {\n          return this.origin;\n        } else {\n          return this.origin.str();\n        }\n      },\n    };\n  }\n\n  function layer(l: string): LayerComp {\n    return {\n      id: \"layer\",\n      layer: l,\n      inspect() {\n        return this.layer ?? game.defLayer;\n      },\n    };\n  }\n\n  function z(z: number): ZComp {\n    return {\n      id: \"z\",\n      z: z,\n      inspect() {\n        return `${this.z}`;\n      },\n    };\n  }\n\n  function follow(obj: Character, offset?: Vec2): FollowComp {\n    return {\n      id: \"follow\",\n      require: [\"pos\"],\n      follow: {\n        obj: obj,\n        offset: offset ?? vec2(0),\n      },\n      add() {\n        if (obj.exists()) {\n          this.pos = this.follow.obj.pos.add(this.follow.offset);\n        }\n      },\n      update() {\n        if (obj.exists()) {\n          this.pos = this.follow.obj.pos.add(this.follow.offset);\n        }\n      },\n    };\n  }\n\n  function move(direction: number | Vec2, speed: number): MoveComp {\n    const d = typeof direction === \"number\" ? dir(direction) : direction.unit();\n    return {\n      id: \"move\",\n      require: [\"pos\"],\n      update() {\n        this.move(d.scale(speed));\n      },\n    };\n  }\n\n  function cleanup(time: number = 0): CleanupComp {\n    let timer = 0;\n    return {\n      id: \"cleanup\",\n      require: [\"pos\", \"area\"],\n      update() {\n        const screenRect = {\n          p1: vec2(0, 0),\n          p2: vec2(width(), height()),\n        };\n        if (testRectRect2(this.screenArea(), screenRect)) {\n          timer = 0;\n        } else {\n          timer += dt();\n          if (timer >= time) {\n            this.destroy();\n          }\n        }\n      },\n    };\n  }\n\n  // TODO: tell which side collides\n  function area(conf: AreaCompConf = {}): AreaComp {\n    const colliding = {};\n\n    return {\n      id: \"area\",\n\n      add() {\n        if (this.area.cursor) {\n          this.hovers(() => {\n            app.cursor(this.area.cursor);\n          });\n        }\n      },\n\n      area: {\n        offset: conf.offset ?? vec2(0),\n        width: conf.width,\n        height: conf.height,\n        scale: conf.scale ?? vec2(1),\n        cursor: conf.cursor,\n      },\n\n      areaWidth(): number {\n        const { p1, p2 } = this.worldArea();\n        return p2.x - p1.x;\n      },\n\n      areaHeight(): number {\n        const { p1, p2 } = this.worldArea();\n        return p2.y - p1.y;\n      },\n\n      isClicked(): boolean {\n        return app.mouseClicked() && this.isHovering();\n      },\n\n      isHovering() {\n        const mpos = this.fixed ? mousePos() : mouseWorldPos();\n        if (app.isTouch) {\n          return app.mouseDown() && this.hasPt(mpos);\n        } else {\n          return this.hasPt(mpos);\n        }\n      },\n\n      isColliding(other) {\n        if (!other.area || !other.exists()) {\n          return false;\n        }\n        const a1 = this.worldArea();\n        const a2 = other.worldArea();\n        return testRectRect(a1, a2);\n      },\n\n      isTouching(other) {\n        if (!other.area || !other.exists()) {\n          return false;\n        }\n        const a1 = this.worldArea();\n        const a2 = other.worldArea();\n        return testRectRect2(a1, a2);\n      },\n\n      clicks(f: () => void): EventCanceller {\n        return this.action(() => {\n          if (this.isClicked()) {\n            f();\n          }\n        });\n      },\n\n      hovers(onHover: () => void, onNotHover: () => void): EventCanceller {\n        return this.action(() => {\n          if (this.isHovering()) {\n            onHover();\n          } else {\n            if (onNotHover) {\n              onNotHover();\n            }\n          }\n        });\n      },\n\n      collides(\n        tag: Tag,\n        f: (o: Character, side?: RectSide) => void\n      ): EventCanceller {\n        const e1 = this.action(() => this._checkCollisions(tag, f));\n        const e2 = this.on(\n          \"collide\",\n          (obj, side) => obj.is(tag) && f(obj, side)\n        );\n        return () => [e1, e2].forEach((f) => f());\n      },\n\n      hasPt(pt: Vec2): boolean {\n        const a = this.worldArea();\n        return testRectPt(\n          {\n            p1: a.p1,\n            p2: a.p2,\n          },\n          pt\n        );\n      },\n\n      // push an obj out of another if they're overlapped\n      pushOut(obj: Character): Vec2 | null {\n        if (obj === this) {\n          return null;\n        }\n\n        if (!obj.area) {\n          return null;\n        }\n\n        const a1 = this.worldArea();\n        const a2 = obj.worldArea();\n        const md = minkDiff(a1, a2);\n\n        if (!testRectPt(md, vec2(0))) {\n          return null;\n        }\n\n        let dist = Math.min(\n          Math.abs(md.p1.x),\n          Math.abs(md.p2.x),\n          Math.abs(md.p1.y),\n          Math.abs(md.p2.y)\n        );\n\n        const res = (() => {\n          switch (dist) {\n            case Math.abs(md.p1.x):\n              return vec2(dist, 0);\n            case Math.abs(md.p2.x):\n              return vec2(-dist, 0);\n            case Math.abs(md.p1.y):\n              return vec2(0, dist);\n            case Math.abs(md.p2.y):\n              return vec2(0, -dist);\n          }\n        })();\n\n        this.pos = this.pos.add(res);\n      },\n\n      // push object out of other solid objects\n      pushOutAll() {\n        every((other) => this.pushOut(other));\n      },\n\n      // @ts-ignore\n      _checkCollisions(tag: Tag) {\n        every(tag, (obj) => {\n          if (this === obj || !this.exists() || colliding[obj._id]) {\n            return;\n          }\n\n          if (this.isColliding(obj)) {\n            // TODO: return side\n            this.trigger(\"collide\", obj, null);\n            colliding[obj._id] = obj;\n          }\n        });\n\n        for (const id in colliding) {\n          const obj = colliding[id];\n          if (!this.isColliding(obj)) {\n            delete colliding[id];\n          }\n        }\n      },\n\n      // TODO: cache\n      // TODO: use matrix mult for more accuracy and rotation?\n      worldArea(): Rect {\n        let w = this.area.width ?? this.width;\n        let h = this.area.height ?? this.height;\n\n        if (w == null || h == null) {\n          throw new Error(\"failed to get area dimension\");\n        }\n\n        const scale = (this.scale ?? vec2(1)).scale(this.area.scale);\n\n        w *= scale.x;\n        h *= scale.y;\n\n        const orig = originPt(this.origin || DEF_ORIGIN);\n        const pos = (this.pos ?? vec2(0))\n          .add(this.area.offset)\n          .sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n        return {\n          p1: pos,\n          p2: vec2(pos.x + w, pos.y + h),\n        };\n      },\n\n      screenArea(): Rect {\n        const area = this.worldArea();\n        if (this.fixed) {\n          return area;\n        } else {\n          return {\n            p1: game.camMatrix.multVec2(area.p1),\n            p2: game.camMatrix.multVec2(area.p2),\n          };\n        }\n      },\n    };\n  }\n\n  // make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\n  function getRenderProps(obj: Character<any>) {\n    return {\n      pos: obj.pos,\n      scale: obj.scale,\n      color: obj.color,\n      opacity: obj.opacity,\n      angle: obj.angle,\n      origin: obj.origin,\n      outline: obj.outline,\n      prog: assets.shaders[obj.shader],\n      uniform: obj.uniform,\n    };\n  }\n\n  interface SpriteCurAnim {\n    name: string;\n    timer: number;\n    loop: boolean;\n    speed: number;\n    pingpong: boolean;\n    onEnd: () => void;\n  }\n\n  // TODO: clean\n  function sprite(\n    id: string | SpriteData,\n    conf: SpriteCompConf = {}\n  ): SpriteComp {\n    let spr = null;\n    let curAnim: SpriteCurAnim | null = null;\n\n    function calcTexScale(\n      tex: GfxTexture,\n      q: Quad,\n      w?: number,\n      h?: number\n    ): Vec2 {\n      const scale = vec2(1, 1);\n      if (w && h) {\n        scale.x = w / (tex.width * q.w);\n        scale.y = h / (tex.height * q.h);\n      } else if (w) {\n        scale.x = w / (tex.width * q.w);\n        scale.y = scale.x;\n      } else if (h) {\n        scale.y = h / (tex.height * q.h);\n        scale.x = scale.y;\n      }\n      return scale;\n    }\n\n    return {\n      id: \"sprite\",\n      // TODO: allow update\n      width: 0,\n      height: 0,\n      frame: conf.frame || 0,\n      quad: conf.quad || quad(0, 0, 1, 1),\n      animSpeed: conf.animSpeed ?? 1,\n\n      load() {\n        if (typeof id === \"string\") {\n          spr = assets.sprites[id];\n        } else {\n          spr = id;\n        }\n\n        if (!spr) {\n          throw new Error(`sprite not found: \"${id}\"`);\n        }\n\n        let q = { ...spr.frames[0] };\n\n        if (conf.quad) {\n          q = q.scale(conf.quad);\n        }\n\n        const scale = calcTexScale(spr.tex, q, conf.width, conf.height);\n\n        this.width = spr.tex.width * q.w * scale.x;\n        this.height = spr.tex.height * q.h * scale.y;\n\n        if (conf.anim) {\n          this.play(conf.anim);\n        }\n      },\n\n      draw() {\n        drawSprite({\n          ...getRenderProps(this),\n          sprite: spr,\n          frame: this.frame,\n          quad: this.quad,\n          flipX: conf.flipX,\n          flipY: conf.flipY,\n          tiled: conf.tiled,\n          width: conf.width,\n          height: conf.height,\n        });\n      },\n\n      update() {\n        if (!curAnim) {\n          return;\n        }\n\n        const anim = spr.anims[curAnim.name];\n\n        if (typeof anim === \"number\") {\n          this.frame = anim;\n          return;\n        }\n\n        if (anim.speed === 0) {\n          throw new Error(\"sprite anim speed cannot be 0\");\n        }\n\n        curAnim.timer += dt() * this.animSpeed;\n\n        if (curAnim.timer >= 1 / curAnim.speed) {\n          curAnim.timer = 0;\n          // TODO: clean up\n          if (anim.from > anim.to) {\n            this.frame--;\n            if (this.frame < anim.to) {\n              if (curAnim.loop) {\n                this.frame = anim.from;\n              } else {\n                this.frame++;\n                curAnim.onEnd();\n                this.stop();\n              }\n            }\n          } else {\n            this.frame++;\n            if (this.frame > anim.to) {\n              if (curAnim.loop) {\n                this.frame = anim.from;\n              } else {\n                this.frame--;\n                curAnim.onEnd();\n                this.stop();\n              }\n            }\n          }\n        }\n      },\n\n      // TODO: this conf should be used instead of the sprite data conf, if given\n      play(name: string, conf: SpriteAnimPlayConf = {}) {\n        if (!spr) {\n          ready(() => {\n            this.play(name);\n          });\n          return;\n        }\n\n        const anim = spr.anims[name];\n\n        if (anim == null) {\n          throw new Error(`anim not found: ${name}`);\n        }\n\n        if (curAnim) {\n          this.stop();\n        }\n\n        curAnim = {\n          name: name,\n          timer: 0,\n          loop: conf.loop ?? anim.loop ?? false,\n          pingpong: conf.pingpong ?? anim.pingpong ?? false,\n          speed: conf.speed ?? anim.speed ?? 10,\n          onEnd: conf.onEnd ?? (() => {}),\n        };\n\n        if (typeof anim === \"number\") {\n          this.frame = anim;\n        } else {\n          this.frame = anim.from;\n        }\n\n        this.trigger(\"animPlay\", name);\n      },\n\n      stop() {\n        if (!curAnim) {\n          return;\n        }\n        const prevAnim = curAnim.name;\n        curAnim = null;\n        this.trigger(\"animEnd\", prevAnim);\n      },\n\n      numFrames() {\n        if (!spr) {\n          return 0;\n        }\n        return spr.frames.length;\n      },\n\n      curAnim() {\n        return curAnim?.name;\n      },\n\n      flipX(b: boolean) {\n        conf.flipX = b;\n      },\n\n      flipY(b: boolean) {\n        conf.flipY = b;\n      },\n\n      inspect() {\n        let msg = \"\";\n        if (typeof id === \"string\") {\n          msg += JSON.stringify(id);\n        } else {\n          msg += \"[blob]\";\n        }\n        return msg;\n      },\n    };\n  }\n\n  function text(t: string, conf: TextCompConf = {}): TextComp {\n    function update() {\n      const font = assets.fonts[this.font ?? gconf.font ?? DEF_FONT];\n\n      if (!font) {\n        throw new Error(`font not found: \"${font}\"`);\n      }\n\n      const ftext = gfx.fmtText({\n        ...getRenderProps(this),\n        text: this.text + \"\",\n        size: this.textSize,\n        font: font,\n        width: conf.width,\n      });\n\n      this.width = ftext.width / (this.scale?.x || 1);\n      this.height = ftext.height / (this.scale?.y || 1);\n\n      return ftext;\n    }\n\n    return {\n      id: \"text\",\n      text: t,\n      textSize: conf.size,\n      font: conf.font,\n      width: 0,\n      height: 0,\n\n      load() {\n        update.call(this);\n      },\n\n      draw() {\n        gfx.drawFmtText(update.call(this));\n      },\n    };\n  }\n\n  function rect(w: number, h: number): RectComp {\n    return {\n      id: \"rect\",\n      width: w,\n      height: h,\n      draw() {\n        gfx.drawRect({\n          ...getRenderProps(this),\n          width: this.width,\n          height: this.height,\n        });\n      },\n      inspect() {\n        return `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n      },\n    };\n  }\n\n  function uvquad(w: number, h: number): UVQuadComp {\n    return {\n      id: \"rect\",\n      width: w,\n      height: h,\n      draw() {\n        gfx.drawUVQuad({\n          ...getRenderProps(this),\n          width: this.width,\n          height: this.height,\n        });\n      },\n      inspect() {\n        return `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n      },\n    };\n  }\n\n  function circle(radius: number): CircleComp {\n    return {\n      id: \"circle\",\n      radius: radius,\n      draw() {\n        gfx.drawCircle({\n          ...getRenderProps(this),\n          radius: this.radius,\n        });\n      },\n      inspect() {\n        return `${Math.ceil(this.radius)}`;\n      },\n    };\n  }\n\n  function outline(\n    width: number = 1,\n    color: Color = rgb(0, 0, 0)\n  ): OutlineComp {\n    return {\n      id: \"outline\",\n      outline: {\n        width,\n        color,\n      },\n    };\n  }\n\n  function timer(n?: number, action?: () => void): TimerComp {\n    const timers: IDList<Timer> = new IDList();\n    if (n && action) {\n      timers.pushd({\n        time: n,\n        action: action,\n      });\n    }\n    return {\n      id: \"timer\",\n      wait(n: number, action: () => void): EventCanceller {\n        return timers.pushd({\n          time: n,\n          action: action,\n        });\n      },\n      update() {\n        timers.forEach((timer, id) => {\n          timer.time -= dt();\n          if (timer.time <= 0) {\n            timer.action.call(this);\n            timers.delete(id);\n          }\n        });\n      },\n    };\n  }\n\n  // maximum y velocity with body()\n  const DEF_JUMP_FORCE = 640;\n  const MAX_VEL = 65536;\n\n  // TODO: land on wall\n  function body(conf: BodyCompConf = {}): BodyComp {\n    let velY = 0;\n    let curPlatform: Character | null = null;\n    let lastPlatformPos = null;\n    let canDouble = true;\n\n    return {\n      id: \"body\",\n      require: [\"pos\"],\n      jumpForce: conf.jumpForce ?? DEF_JUMP_FORCE,\n      weight: conf.weight ?? 1,\n      solid: conf.solid ?? true,\n\n      update() {\n        let justFall = false;\n\n        // check if loses current platform\n        if (curPlatform) {\n          const a1 = this.worldArea();\n          const a2 = curPlatform.worldArea();\n          const y1 = a1.p2.y;\n          const y2 = a2.p1.y;\n          const x1 = a1.p1.x;\n          const x2 = a1.p2.x;\n          const x3 = a2.p1.x;\n          const x4 = a2.p2.x;\n\n          if (!curPlatform.exists() || y1 !== y2 || x2 < x3 || x1 > x4) {\n            this.trigger(\"fall\", curPlatform);\n            curPlatform = null;\n            lastPlatformPos = null;\n            justFall = true;\n          } else {\n            if (lastPlatformPos && curPlatform.pos) {\n              // TODO: moveBy?\n              // sticky platform\n              this.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n              lastPlatformPos = curPlatform.pos.clone();\n            }\n          }\n        }\n\n        if (!curPlatform) {\n          const col = this.move(0, velY);\n\n          // check if grounded to a new platform\n          if (col) {\n            if (col.side === \"bottom\") {\n              curPlatform = col.obj;\n              const oy = velY;\n              velY = 0;\n              if (curPlatform.pos) {\n                lastPlatformPos = curPlatform.pos.clone();\n              }\n              if (!justFall) {\n                this.trigger(\"ground\", curPlatform);\n                canDouble = true;\n              }\n            } else if (col.side === \"top\") {\n              velY = 0;\n              this.trigger(\"headbutt\", col.obj);\n            }\n          }\n\n          velY += gravity() * this.weight * dt();\n          velY = Math.min(velY, conf.maxVel ?? MAX_VEL);\n        }\n      },\n\n      curPlatform(): Character | null {\n        return curPlatform;\n      },\n\n      grounded(): boolean {\n        return curPlatform !== null;\n      },\n\n      falling(): boolean {\n        return velY > 0;\n      },\n\n      jump(force: number) {\n        curPlatform = null;\n        lastPlatformPos = null;\n        velY = -force || -this.jumpForce;\n      },\n\n      djump(force: number) {\n        if (this.grounded()) {\n          this.jump(force);\n        } else if (canDouble) {\n          canDouble = false;\n          this.jump(force);\n          this.trigger(\"djump\");\n        }\n      },\n    };\n  }\n\n  function shader(id: string, uniform: Uniform = {}): ShaderComp {\n    const prog = assets.shaders[id];\n    return {\n      id: \"shader\",\n      shader: id,\n      uniform: uniform,\n    };\n  }\n\n  function solid(): SolidComp {\n    return {\n      id: \"solid\",\n      require: [\"area\"],\n      solid: true,\n    };\n  }\n\n  function fixed(): FixedComp {\n    return {\n      id: \"fixed\",\n      fixed: true,\n    };\n  }\n\n  function stay(): StayComp {\n    return {\n      id: \"stay\",\n      stay: true,\n    };\n  }\n\n  function health(hp: number): HealthComp {\n    if (hp == null) {\n      throw new Error(\"health() requires the initial amount of hp\");\n    }\n    return {\n      id: \"health\",\n      hurt(n: number = 1) {\n        this.setHP(hp - n);\n        this.trigger(\"hurt\");\n      },\n      heal(n: number = 1) {\n        this.setHP(hp + n);\n        this.trigger(\"heal\");\n      },\n      hp(): number {\n        return hp;\n      },\n      setHP(n: number) {\n        hp = n;\n        if (hp <= 0) {\n          this.trigger(\"death\");\n        }\n      },\n      inspect() {\n        return `${hp}`;\n      },\n    };\n  }\n\n  function lifespan(time: number, conf: LifespanCompConf = {}): LifespanComp {\n    if (time == null) {\n      throw new Error(\"lifespan() requires time\");\n    }\n    let timer = 0;\n    const fade = conf.fade ?? 0;\n    const startFade = Math.max(time - fade, 0);\n    return {\n      id: \"lifespan\",\n      update() {\n        timer += dt();\n        // TODO: don't assume 1 as start opacity\n        if (timer >= startFade) {\n          this.opacity = map(timer, startFade, time, 1, 0);\n        }\n        if (timer >= time) {\n          this.destroy();\n        }\n      },\n    };\n  }\n\n  const debug: Debug = {\n    inspect: false,\n    timeScale: 1,\n    showLog: true,\n    fps: app.fps,\n    objCount(): number {\n      return game.objs.size;\n    },\n    stepFrame() {\n      gameFrame(true);\n    },\n    drawCalls: gfx.drawCalls,\n    clearLog: logger.clear,\n    log: logger.info,\n    error: logger.error,\n    get paused() {\n      return game.paused;\n    },\n    set paused(v) {\n      game.paused = v;\n      if (v) {\n        audio.ctx.suspend();\n      } else {\n        audio.ctx.resume();\n      }\n    },\n  };\n\n  function ready(cb: () => void): void {\n    if (game.loaded) {\n      cb();\n    } else {\n      game.on(\"load\", cb);\n    }\n  }\n\n  function scene(id: SceneID, def: SceneDef) {\n    game.scenes[id] = def;\n  }\n\n  function go(id: SceneID, ...args) {\n    if (!game.scenes[id]) {\n      throw new Error(`scene not found: ${id}`);\n    }\n\n    game.on(\"next\", () => {\n      game.events = {};\n\n      game.objEvents = {\n        add: new IDList(),\n        update: new IDList(),\n        draw: new IDList(),\n        destroy: new IDList(),\n      };\n\n      game.objs.forEach((obj) => {\n        if (!obj.stay) {\n          destroy(obj);\n        }\n      });\n\n      game.timers = new IDList();\n\n      // cam\n      game.cam = {\n        pos: center(),\n        scale: vec2(1, 1),\n        angle: 0,\n        shake: 0,\n      };\n\n      game.camMousePos = app.mousePos();\n      game.camMatrix = mat4();\n\n      game.layers = {};\n      game.defLayer = null;\n      game.gravity = DEF_GRAVITY;\n\n      game.scenes[id](...args);\n\n      if (gconf.debug !== false) {\n        regDebugInput();\n      }\n    });\n  }\n\n  function getData<T>(key: string, def?: T): T {\n    try {\n      return JSON.parse(window.localStorage[key]);\n    } catch {\n      if (def) {\n        setData(key, def);\n        return def;\n      } else {\n        return null;\n      }\n    }\n  }\n\n  function setData(key: string, data: any) {\n    window.localStorage[key] = JSON.stringify(data);\n  }\n\n  function plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n    const funcs = plugin(ctx);\n    for (const k in funcs) {\n      // @ts-ignore\n      ctx[k] = funcs[k];\n      if (gconf.global !== false) {\n        // @ts-ignore\n        window[k] = funcs[k];\n      }\n    }\n    return ctx as unknown as MergeObj<T> & KaboomCtx;\n  }\n\n  function center(): Vec2 {\n    return vec2(width() / 2, height() / 2);\n  }\n\n  function grid(level: Level, p: Vec2) {\n    return {\n      id: \"grid\",\n      gridPos: p.clone(),\n\n      setGridPos(...args) {\n        const p = vec2(...args);\n        this.gridPos = p.clone();\n        this.pos = vec2(\n          level.offset().x + this.gridPos.x * level.gridWidth(),\n          level.offset().y + this.gridPos.y * level.gridHeight()\n        );\n      },\n\n      moveLeft() {\n        this.setGridPos(this.gridPos.add(vec2(-1, 0)));\n      },\n\n      moveRight() {\n        this.setGridPos(this.gridPos.add(vec2(1, 0)));\n      },\n\n      moveUp() {\n        this.setGridPos(this.gridPos.add(vec2(0, -1)));\n      },\n\n      moveDown() {\n        this.setGridPos(this.gridPos.add(vec2(0, 1)));\n      },\n    };\n  }\n\n  function addLevel(map: string[], conf: LevelConf): Level {\n    if (!conf.width || !conf.height) {\n      throw new Error(\"Must provide level grid width & height.\");\n    }\n\n    const objs: Character[] = [];\n    const offset = vec2(conf.pos || vec2(0));\n    let longRow = 0;\n\n    const level = {\n      offset() {\n        return offset.clone();\n      },\n\n      gridWidth() {\n        return conf.width;\n      },\n\n      gridHeight() {\n        return conf.height;\n      },\n\n      getPos(...args): Vec2 {\n        const p = vec2(...args);\n        return vec2(offset.x + p.x * conf.width, offset.y + p.y * conf.height);\n      },\n\n      spawn(sym: string, ...args): Character {\n        const p = vec2(...args);\n\n        const comps = (() => {\n          if (conf[sym]) {\n            if (typeof conf[sym] !== \"function\") {\n              throw new Error(\n                \"level symbol def must be a function returning a component list\"\n              );\n            }\n            return conf[sym](p);\n          } else if (conf.any) {\n            return conf.any(sym, p);\n          }\n        })();\n\n        if (!comps) {\n          return;\n        }\n\n        const posComp = vec2(\n          offset.x + p.x * conf.width,\n          offset.y + p.y * conf.height\n        );\n\n        for (const comp of comps) {\n          if (comp.id === \"pos\") {\n            posComp.x += comp.pos.x;\n            posComp.y += comp.pos.y;\n            break;\n          }\n        }\n\n        comps.push(pos(posComp));\n        comps.push(grid(this, p));\n\n        const obj = add(comps);\n\n        objs.push(obj);\n\n        return obj;\n      },\n\n      width() {\n        return longRow * conf.width;\n      },\n\n      height() {\n        return map.length * conf.height;\n      },\n\n      destroy() {\n        for (const obj of objs) {\n          destroy(obj);\n        }\n      },\n    };\n\n    map.forEach((row, i) => {\n      const syms = row.split(\"\");\n\n      longRow = Math.max(syms.length, longRow);\n\n      syms.forEach((sym, j) => {\n        level.spawn(sym, vec2(j, i));\n      });\n    });\n\n    return level;\n  }\n\n  const ctx: KaboomCtx = {\n    // asset load\n    loadRoot: assets.loadRoot,\n    loadSprite: assets.loadSprite,\n    loadSpriteAtlas: assets.loadSpriteAtlas,\n    loadSound: assets.loadSound,\n    loadFont: assets.loadFont,\n    loadShader: assets.loadShader,\n    loadAseprite: assets.loadAseprite,\n    loadPedit: assets.loadPedit,\n    loadBean: assets.loadBean,\n    load: assets.load,\n    // query\n    width,\n    height,\n    center,\n    dt,\n    time: app.time,\n    screenshot: app.screenshot,\n    focused: app.focused,\n    focus: app.focus,\n    cursor: app.cursor,\n    regCursor,\n    fullscreen: app.fullscreen,\n    ready,\n    isTouch: () => app.isTouch,\n    // misc\n    layers,\n    camPos,\n    camScale,\n    camRot,\n    shake,\n    toScreen,\n    toWorld,\n    gravity,\n    // obj\n    add,\n    readd,\n    destroy,\n    destroyAll,\n    get,\n    every,\n    revery,\n    // comps\n    pos,\n    scale,\n    rotate,\n    color,\n    opacity,\n    origin,\n    layer,\n    area,\n    sprite,\n    text,\n    rect,\n    circle,\n    uvquad,\n    outline,\n    body,\n    shader,\n    timer,\n    solid,\n    fixed,\n    stay,\n    health,\n    lifespan,\n    z,\n    move,\n    cleanup,\n    follow,\n    // group events\n    on,\n    action,\n    render,\n    collides,\n    clicks,\n    hovers,\n    // input\n    keyDown,\n    keyPress,\n    keyPressRep,\n    keyRelease,\n    mouseDown,\n    mouseClick,\n    mouseRelease,\n    mouseMove,\n    charInput,\n    touchStart,\n    touchMove,\n    touchEnd,\n    mousePos,\n    mouseWorldPos,\n    mouseDeltaPos: app.mouseDeltaPos,\n    keyIsDown: app.keyDown,\n    keyIsPressed: app.keyPressed,\n    keyIsPressedRep: app.keyPressedRep,\n    keyIsReleased: app.keyReleased,\n    mouseIsDown: app.mouseDown,\n    mouseIsClicked: app.mouseClicked,\n    mouseIsReleased: app.mouseReleased,\n    mouseIsMoved: app.mouseMoved,\n    // timer\n    loop,\n    wait,\n    // audio\n    play,\n    volume: audio.volume,\n    burp: audio.burp,\n    audioCtx: audio.ctx,\n    audio: audio,\n    // math\n    rng,\n    rand,\n    randi,\n    randSeed,\n    vec2,\n    dir,\n    rgb,\n    quad,\n    choose,\n    chance,\n    lerp,\n    map,\n    mapc,\n    wave,\n    deg2rad,\n    rad2deg,\n    testLineLine,\n    testRectRect,\n    testRectLine,\n    testRectPt,\n    // raw draw\n    drawSprite,\n    drawText,\n    // TODO: wrap these to use assets lib for the \"prog\" prop\n    drawRect: gfx.drawRect,\n    drawLine: gfx.drawLine,\n    drawLines: gfx.drawLines,\n    drawTri: gfx.drawTri,\n    drawCircle: gfx.drawCircle,\n    drawEllipse: gfx.drawEllipse,\n    drawUVQuad: gfx.drawUVQuad,\n    drawPoly: gfx.drawPoly,\n    pushTransform: gfx.pushTransform,\n    popTransform: gfx.popTransform,\n    pushTranslate: gfx.pushTranslate,\n    pushRotate: gfx.pushRotateZ,\n    pushScale: gfx.pushScale,\n    // debug\n    debug,\n    // scene\n    scene,\n    go,\n    // level\n    addLevel,\n    // storage\n    getData,\n    setData,\n    // plugin\n    plug,\n    // char sets\n    ASCII_CHARS,\n    CP437_CHARS,\n    // dirs\n    LEFT: vec2(-1, 0),\n    RIGHT: vec2(1, 0),\n    UP: vec2(0, -1),\n    DOWN: vec2(0, 1),\n    // dom\n    canvas: app.canvas,\n  };\n\n  plug(kaboomPlugin);\n\n  if (gconf.plugins) {\n    gconf.plugins.forEach(plug);\n  }\n\n  if (gconf.global !== false) {\n    for (const k in ctx) {\n      window[k] = ctx[k];\n    }\n  }\n\n  let numFrames = 0;\n\n  function frames() {\n    return numFrames;\n  }\n\n  app.run(() => {\n    numFrames++;\n    gfx.frameStart();\n\n    if (!game.loaded) {\n      // if assets are not fully loaded, draw a progress bar\n      const progress = assets.loadProgress();\n\n      if (progress === 1) {\n        game.loaded = true;\n        game.trigger(\"load\");\n      } else {\n        const w = width() / 2;\n        const h = 24 / gfx.scale();\n        const pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n        gfx.drawRect({\n          pos: vec2(0),\n          width: width(),\n          height: height(),\n          color: rgb(0, 0, 0),\n        });\n\n        gfx.drawRect({\n          pos: pos,\n          width: w,\n          height: h,\n          fill: false,\n          outline: {\n            width: 4 / gfx.scale(),\n          },\n        });\n\n        gfx.drawRect({\n          pos: pos,\n          width: w * progress,\n          height: h,\n        });\n      }\n    } else {\n      // TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n      game.camMousePos = game.camMatrix.invert().multVec2(app.mousePos());\n      game.trigger(\"input\");\n      gameFrame();\n\n      if (debug.inspect) {\n        drawInspect();\n      }\n\n      if (debug.showLog) {\n        logger.draw();\n      }\n    }\n\n    gfx.frameEnd();\n  });\n\n  if (gconf.debug !== false) {\n    regDebugInput();\n  }\n\n  window.addEventListener(\"error\", (e) => {\n    logger.error(`Error: ${e.error.message}`);\n    app.quit();\n    app.run(() => {\n      if (assets.loadProgress() === 1) {\n        gfx.frameStart();\n        logger.draw();\n        gfx.frameEnd();\n      }\n    });\n  });\n\n  return ctx;\n};\n"],
  "mappings": "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,EAAI,KACV,WAAY,EAAI,WAChB,QAAS,EAAI,QACb,MAAO,EAAI,MACX,OAAQ,EAAI,OACZ,aACA,WAAY,EAAI,WAChB,SACA,QAAS,IAAM,EAAI,QAEnB,UACA,SACA,WACA,SACA,QACA,WACA,UACA,WAEA,MACA,QACA,WACA,cACA,OACA,SACA,UAEA,OACA,SACA,UACA,SACA,WACA,UACA,SACA,QACA,UACA,QACA,QACA,UACA,UACA,WACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,YACA,KACA,QACA,WACA,UAEA,MACA,UACA,SACA,YACA,UACA,UAEA,UACA,WACA,cACA,aACA,YACA,aACA,eACA,YACA,YACA,cACA,YACA,YACA,WACA,iBACA,cAAe,EAAI,cACnB,UAAW,EAAI,QACf,aAAc,EAAI,WAClB,gBAAiB,EAAI,cACrB,cAAe,EAAI,YACnB,YAAa,EAAI,UACjB,eAAgB,EAAI,aACpB,gBAAiB,EAAI,cACrB,aAAc,EAAI,WAElB,QACA,QAEA,OACA,OAAQ,EAAM,OACd,KAAM,EAAM,KACZ,SAAU,EAAM,IAChB,MAAO,EAEP,OACA,QACA,SACA,YACA,OACA,OACA,MACA,QACA,UACA,UACA,QACA,OACA,QACA,QACA,WACA,WACA,gBACA,gBACA,gBACA,cAEA,aACA,WAEA,SAAU,EAAI,SACd,SAAU,EAAI,SACd,UAAW,EAAI,UACf,QAAS,EAAI,QACb,WAAY,EAAI,WAChB,YAAa,EAAI,YACjB,WAAY,EAAI,WAChB,SAAU,EAAI,SACd,cAAe,EAAI,cACnB,aAAc,EAAI,aAClB,cAAe,EAAI,cACnB,WAAY,EAAI,YAChB,UAAW,EAAI,UAEf,SAEA,SACA,MAEA,YAEA,WACA,WAEA,QAEA,eACA,eAEA,KAAM,EAAK,GAAI,GACf,MAAO,EAAK,EAAG,GACf,GAAI,EAAK,EAAG,IACZ,KAAM,EAAK,EAAG,GAEd,OAAQ,EAAI,QASd,GANA,GAAK,IAED,EAAM,SACR,EAAM,QAAQ,QAAQ,IAGpB,EAAM,SAAW,GACnB,OAAW,KAAK,IACd,OAAO,GAAK,GAAI,GAIpB,GAAI,IAAY,EAEhB,aAAkB,CAChB,MAAO,IADA,sBAIT,EAAI,IAAI,IAAM,CAIZ,GAHA,KACA,EAAI,aAEC,EAAK,OAqCR,EAAK,YAAc,EAAK,UAAU,SAAS,SAAS,EAAI,YACxD,EAAK,QAAQ,SACb,KAEI,GAAM,SACR,KAGE,GAAM,SACR,EAAO,WA9CO,CAEhB,GAAM,GAAW,EAAO,eAExB,GAAI,IAAa,EACf,EAAK,OAAS,GACd,EAAK,QAAQ,YACR,CACL,GAAM,GAAI,IAAU,EACd,EAAI,GAAK,EAAI,QACb,EAAM,EAAK,IAAU,EAAG,IAAW,GAAG,IAAI,EAAK,EAAI,EAAG,EAAI,IAEhE,EAAI,SAAS,CACX,IAAK,EAAK,GACV,MAAO,IACP,OAAQ,IACR,MAAO,EAAI,EAAG,EAAG,KAGnB,EAAI,SAAS,CACX,IAAK,EACL,MAAO,EACP,OAAQ,EACR,KAAM,GACN,QAAS,CACP,MAAO,EAAI,EAAI,WAInB,EAAI,SAAS,CACX,IAAK,EACL,MAAO,EAAI,EACX,OAAQ,KAkBd,EAAI,aAGF,EAAM,QAAU,IAClB,KAGF,OAAO,iBAAiB,QAAS,AAAC,GAAM,CACtC,EAAO,MAAM,UAAU,EAAE,MAAM,WAC/B,EAAI,OACJ,EAAI,IAAI,IAAM,CACZ,AAAI,EAAO,iBAAmB,GAC5B,GAAI,aACJ,EAAO,OACP,EAAI,gBAKH",
  "names": []
}
